{"ast":null,"code":"import PropTypes from 'prop-types';\nimport { backgroundDoc } from '../../utils/general-prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = {\n    background: backgroundDoc,\n    dir: PropTypes.oneOf(['rtl']),\n    full: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['min'])]),\n    options: PropTypes.shape({\n      layer: PropTypes.shape({\n        singleId: PropTypes.bool\n      })\n    }),\n    plain: PropTypes.bool,\n    cssVars: PropTypes.bool,\n    theme: PropTypes.object,\n    themeMode: PropTypes.oneOf(['dark', 'light']),\n    userAgent: PropTypes.string,\n    containerTarget: PropTypes.object,\n    messages: PropTypes.shape({\n      format: PropTypes.func,\n      messages: PropTypes.shape({\n        fileInput: PropTypes.shape({\n          browse: PropTypes.string,\n          dropPrompt: PropTypes.string,\n          dropPromptMultiple: PropTypes.string,\n          files: PropTypes.string,\n          remove: PropTypes.string,\n          removeAll: PropTypes.string\n        }),\n        form: PropTypes.shape({\n          invalid: PropTypes.string,\n          required: PropTypes.string\n        }),\n        menu: PropTypes.shape({\n          openMenu: PropTypes.string,\n          closeMenu: PropTypes.string\n        }),\n        rangeSelector: PropTypes.shape({\n          lower: PropTypes.string,\n          upper: PropTypes.string\n        }),\n        select: PropTypes.shape({\n          multiple: PropTypes.string\n        }),\n        skipLinks: PropTypes.shape({\n          skipTo: PropTypes.string\n        }),\n        tabs: PropTypes.shape({\n          tabContents: PropTypes.string\n        }),\n        textInput: PropTypes.shape({\n          enterSelect: PropTypes.string,\n          suggestionsCount: PropTypes.string,\n          suggestionsExist: PropTypes.string,\n          suggestionIsOpen: PropTypes.string\n        }),\n        video: PropTypes.shape({\n          closeMenu: PropTypes.string,\n          fullScreen: PropTypes.string,\n          progressMeter: PropTypes.string,\n          scrubber: PropTypes.string,\n          openMenu: PropTypes.string,\n          pauseButton: PropTypes.string,\n          playButton: PropTypes.string,\n          volumeDown: PropTypes.string,\n          volumeUp: PropTypes.string\n        })\n      })\n    })\n  };\n}\n\nexport var GrommetPropTypes = PropType;","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/node_modules/grommet/es6/components/Grommet/propTypes.js"],"names":["PropTypes","backgroundDoc","PropType","process","env","NODE_ENV","background","dir","oneOf","full","oneOfType","bool","options","shape","layer","singleId","plain","cssVars","theme","object","themeMode","userAgent","string","containerTarget","messages","format","func","fileInput","browse","dropPrompt","dropPromptMultiple","files","remove","removeAll","form","invalid","required","menu","openMenu","closeMenu","rangeSelector","lower","upper","select","multiple","skipLinks","skipTo","tabs","tabContents","textInput","enterSelect","suggestionsCount","suggestionsExist","suggestionIsOpen","video","fullScreen","progressMeter","scrubber","pauseButton","playButton","volumeDown","volumeUp","GrommetPropTypes"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { backgroundDoc } from '../../utils/general-prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = {\n    background: backgroundDoc,\n    dir: PropTypes.oneOf(['rtl']),\n    full: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['min'])]),\n    options: PropTypes.shape({\n      layer: PropTypes.shape({\n        singleId: PropTypes.bool\n      })\n    }),\n    plain: PropTypes.bool,\n    cssVars: PropTypes.bool,\n    theme: PropTypes.object,\n    themeMode: PropTypes.oneOf(['dark', 'light']),\n    userAgent: PropTypes.string,\n    containerTarget: PropTypes.object,\n    messages: PropTypes.shape({\n      format: PropTypes.func,\n      messages: PropTypes.shape({\n        fileInput: PropTypes.shape({\n          browse: PropTypes.string,\n          dropPrompt: PropTypes.string,\n          dropPromptMultiple: PropTypes.string,\n          files: PropTypes.string,\n          remove: PropTypes.string,\n          removeAll: PropTypes.string\n        }),\n        form: PropTypes.shape({\n          invalid: PropTypes.string,\n          required: PropTypes.string\n        }),\n        menu: PropTypes.shape({\n          openMenu: PropTypes.string,\n          closeMenu: PropTypes.string\n        }),\n        rangeSelector: PropTypes.shape({\n          lower: PropTypes.string,\n          upper: PropTypes.string\n        }),\n        select: PropTypes.shape({\n          multiple: PropTypes.string\n        }),\n        skipLinks: PropTypes.shape({\n          skipTo: PropTypes.string\n        }),\n        tabs: PropTypes.shape({\n          tabContents: PropTypes.string\n        }),\n        textInput: PropTypes.shape({\n          enterSelect: PropTypes.string,\n          suggestionsCount: PropTypes.string,\n          suggestionsExist: PropTypes.string,\n          suggestionIsOpen: PropTypes.string\n        }),\n        video: PropTypes.shape({\n          closeMenu: PropTypes.string,\n          fullScreen: PropTypes.string,\n          progressMeter: PropTypes.string,\n          scrubber: PropTypes.string,\n          openMenu: PropTypes.string,\n          pauseButton: PropTypes.string,\n          playButton: PropTypes.string,\n          volumeDown: PropTypes.string,\n          volumeUp: PropTypes.string\n        })\n      })\n    })\n  };\n}\n\nexport var GrommetPropTypes = PropType;"]},"metadata":{},"sourceType":"module"}