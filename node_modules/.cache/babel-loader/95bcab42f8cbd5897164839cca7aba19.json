{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport PropTypes from 'prop-types';\nimport { colorPropType, genericProps } from '../../utils/general-prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = _extends({}, genericProps, {\n    color: colorPropType,\n    continents: PropTypes.arrayOf(PropTypes.shape({\n      color: colorPropType,\n      name: PropTypes.oneOf(['Africa', 'Asia', 'Australia', 'Europe', 'North America', 'South America']).isRequired,\n      onClick: PropTypes.func,\n      onHover: PropTypes.func\n    })),\n    fill: PropTypes.oneOfType([PropTypes.oneOf(['horizontal', 'vertical']), PropTypes.bool]),\n    onSelectPlace: PropTypes.func,\n    places: PropTypes.arrayOf(PropTypes.shape({\n      color: colorPropType,\n      name: PropTypes.string,\n      // for a11y aria-label\n      location: PropTypes.arrayOf(PropTypes.number).isRequired,\n      onClick: PropTypes.func,\n      onHover: PropTypes.func\n    })),\n    hoverColor: colorPropType\n  });\n}\n\nexport var WorldMapPropTypes = PropType;","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/aprime/node_modules/grommet/es6/components/WorldMap/propTypes.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","PropTypes","colorPropType","genericProps","PropType","process","env","NODE_ENV","color","continents","arrayOf","shape","name","oneOf","isRequired","onClick","func","onHover","fill","oneOfType","bool","onSelectPlace","places","string","location","number","hoverColor","WorldMapPropTypes"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,gCAA5C;AACA,IAAIC,QAAQ,GAAG,EAAf;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,GAAGhB,QAAQ,CAAC,EAAD,EAAKe,YAAL,EAAmB;AACpCK,IAAAA,KAAK,EAAEN,aAD6B;AAEpCO,IAAAA,UAAU,EAAER,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,KAAV,CAAgB;AAC5CH,MAAAA,KAAK,EAAEN,aADqC;AAE5CU,MAAAA,IAAI,EAAEX,SAAS,CAACY,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,eAA1C,EAA2D,eAA3D,CAAhB,EAA6FC,UAFvD;AAG5CC,MAAAA,OAAO,EAAEd,SAAS,CAACe,IAHyB;AAI5CC,MAAAA,OAAO,EAAEhB,SAAS,CAACe;AAJyB,KAAhB,CAAlB,CAFwB;AAQpCE,IAAAA,IAAI,EAAEjB,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACY,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,CAAD,EAA8CZ,SAAS,CAACmB,IAAxD,CAApB,CAR8B;AASpCC,IAAAA,aAAa,EAAEpB,SAAS,CAACe,IATW;AAUpCM,IAAAA,MAAM,EAAErB,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,KAAV,CAAgB;AACxCH,MAAAA,KAAK,EAAEN,aADiC;AAExCU,MAAAA,IAAI,EAAEX,SAAS,CAACsB,MAFwB;AAGxC;AACAC,MAAAA,QAAQ,EAAEvB,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACwB,MAA5B,EAAoCX,UAJN;AAKxCC,MAAAA,OAAO,EAAEd,SAAS,CAACe,IALqB;AAMxCC,MAAAA,OAAO,EAAEhB,SAAS,CAACe;AANqB,KAAhB,CAAlB,CAV4B;AAkBpCU,IAAAA,UAAU,EAAExB;AAlBwB,GAAnB,CAAnB;AAoBD;;AAED,OAAO,IAAIyB,iBAAiB,GAAGvB,QAAxB","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport PropTypes from 'prop-types';\nimport { colorPropType, genericProps } from '../../utils/general-prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = _extends({}, genericProps, {\n    color: colorPropType,\n    continents: PropTypes.arrayOf(PropTypes.shape({\n      color: colorPropType,\n      name: PropTypes.oneOf(['Africa', 'Asia', 'Australia', 'Europe', 'North America', 'South America']).isRequired,\n      onClick: PropTypes.func,\n      onHover: PropTypes.func\n    })),\n    fill: PropTypes.oneOfType([PropTypes.oneOf(['horizontal', 'vertical']), PropTypes.bool]),\n    onSelectPlace: PropTypes.func,\n    places: PropTypes.arrayOf(PropTypes.shape({\n      color: colorPropType,\n      name: PropTypes.string,\n      // for a11y aria-label\n      location: PropTypes.arrayOf(PropTypes.number).isRequired,\n      onClick: PropTypes.func,\n      onHover: PropTypes.func\n    })),\n    hoverColor: colorPropType\n  });\n}\n\nexport var WorldMapPropTypes = PropType;"]},"metadata":{},"sourceType":"module"}