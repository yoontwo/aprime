{"ast":null,"code":"var _excluded = [\"connections\"],\n    _excluded2 = [\"anchor\", \"animation\", \"color\", \"offset\", \"round\", \"thickness\", \"type\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { normalizeColor, parseMetricToNum, useForwardedRef } from '../../utils';\nimport { StyledDiagram } from './StyledDiagram';\nimport { DiagramPropTypes } from './propTypes';\n\nvar computeMidPoint = function computeMidPoint(fromPoint, toPoint) {\n  return [fromPoint[0] > toPoint[0] ? toPoint[0] + (fromPoint[0] - toPoint[0]) / 2 : fromPoint[0] + (toPoint[0] - fromPoint[0]) / 2, fromPoint[1] > toPoint[1] ? toPoint[1] + (fromPoint[1] - toPoint[1]) / 2 : fromPoint[1] + (toPoint[1] - fromPoint[1]) / 2];\n};\n\nvar COMMANDS = {\n  curved: function curved(fromPoint, toPoint, offset, anchor) {\n    var midPoint = computeMidPoint(fromPoint, toPoint);\n    var cmds = \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \";\n\n    if (anchor === 'horizontal') {\n      cmds += \"Q \" + (midPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (midPoint[0] + offset + \",\" + (midPoint[1] + offset) + \" \");\n    } else {\n      cmds += \"Q \" + (fromPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \" + (midPoint[0] + offset + \",\" + (midPoint[1] + offset) + \" \");\n    }\n\n    cmds += \"T \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset);\n    return cmds;\n  },\n  direct: function direct(fromPoint, toPoint, offset) {\n    return \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (\"L \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset));\n  },\n  rectilinear: function rectilinear(fromPoint, toPoint, offset, anchor) {\n    var midPoint = computeMidPoint(fromPoint, toPoint);\n    var cmds = \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \";\n\n    if (anchor === 'horizontal') {\n      cmds += \"L \" + (midPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (\"L \" + (midPoint[0] + offset) + \",\" + (toPoint[1] + offset) + \" \");\n    } else {\n      cmds += \"L \" + (fromPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \" + (\"L \" + (toPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \");\n    }\n\n    cmds += \"L \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset);\n    return cmds;\n  }\n};\n\nvar findTarget = function findTarget(target) {\n  if (typeof target === 'string') {\n    return document.getElementById(target);\n  }\n\n  return target;\n};\n\nvar Diagram = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var connections = _ref.connections,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      dimensions = _useState[0],\n      setDimensions = _useState[1];\n\n  var _useState2 = useState(),\n      connectionPoints = _useState2[0],\n      setConnectionPoints = _useState2[1];\n\n  var svgRef = useForwardedRef(ref);\n  useEffect(function () {\n    setConnectionPoints(undefined);\n  }, [connections]);\n  var onResize = useCallback(function () {\n    var svg = svgRef.current;\n\n    if (svg) {\n      var rect = svg.getBoundingClientRect();\n\n      if (rect.width !== dimensions.width || rect.height !== dimensions.height) {\n        setDimensions({\n          width: rect.width,\n          height: rect.height\n        });\n        setConnectionPoints(undefined);\n      }\n    }\n  }, [dimensions.width, dimensions.height, svgRef]); // Ref that stores resize handler\n\n  var savedOnResize = useRef(); // Update resize ref value if onResize changes.\n  // This allows our effect below to always get latest handler\n\n  useEffect(function () {\n    savedOnResize.current = onResize;\n  }, [onResize]);\n  useEffect(function () {\n    var onResizeHandler = function onResizeHandler(event) {\n      return savedOnResize.current(event);\n    };\n\n    onResizeHandler();\n    window.addEventListener('resize', onResizeHandler);\n    return function () {\n      window.removeEventListener('resize', onResizeHandler);\n    };\n  }, []);\n  var placeConnections = useCallback(function () {\n    var containerRect = svgRef.current.getBoundingClientRect();\n    var updatedConnectionPoints = connections.map(function (_ref2) {\n      var anchor = _ref2.anchor,\n          fromTarget = _ref2.fromTarget,\n          toTarget = _ref2.toTarget;\n      var points;\n      var fromElement = findTarget(fromTarget);\n      var toElement = findTarget(toTarget);\n\n      if (!fromElement) {\n        console.warn(\"Diagram cannot find \" + fromTarget);\n      }\n\n      if (!toElement) {\n        console.warn(\"Diagram cannot find \" + toTarget);\n      }\n\n      if (fromElement && toElement) {\n        var fromRect = fromElement.getBoundingClientRect();\n        var toRect = toElement.getBoundingClientRect(); // There is no x and y when unit testing.\n\n        var fromPoint = [fromRect.left - containerRect.left || 0, fromRect.top - containerRect.top || 0];\n        var toPoint = [toRect.left - containerRect.left || 0, toRect.top - containerRect.top || 0];\n\n        if (anchor === 'vertical') {\n          fromPoint[0] += fromRect.width / 2;\n          toPoint[0] += toRect.width / 2;\n\n          if (fromRect.top < toRect.top) {\n            fromPoint[1] += fromRect.height;\n          } else {\n            toPoint[1] += toRect.height;\n          }\n        } else if (anchor === 'horizontal') {\n          fromPoint[1] += fromRect.height / 2;\n          toPoint[1] += toRect.height / 2;\n\n          if (fromRect.left < toRect.left) {\n            fromPoint[0] += fromRect.width;\n          } else {\n            toPoint[0] += toRect.width;\n          }\n        } else {\n          // center\n          fromPoint[0] += fromRect.width / 2;\n          fromPoint[1] += fromRect.height / 2;\n          toPoint[0] += toRect.width / 2;\n          toPoint[1] += toRect.height / 2;\n        }\n\n        points = [fromPoint, toPoint];\n      }\n\n      return points;\n    });\n    setConnectionPoints(updatedConnectionPoints);\n  }, [connections, svgRef]);\n  useEffect(function () {\n    if (!connectionPoints) {\n      placeConnections();\n    }\n  }, [connectionPoints, placeConnections]);\n  var paths;\n\n  if (connectionPoints) {\n    paths = connections.map(function (_ref3, index) {\n      var anchor = _ref3.anchor,\n          animation = _ref3.animation,\n          color = _ref3.color,\n          offset = _ref3.offset,\n          round = _ref3.round,\n          thickness = _ref3.thickness,\n          type = _ref3.type,\n          connectionRest = _objectWithoutPropertiesLoose(_ref3, _excluded2);\n\n      var path;\n\n      var cleanedRest = _extends({}, connectionRest);\n\n      delete cleanedRest.fromTarget;\n      delete cleanedRest.toTarget;\n      var points = connectionPoints[index];\n\n      if (points) {\n        var offsetWidth = offset ? parseMetricToNum(theme.global.edgeSize[offset]) : 0;\n        var d = COMMANDS[type || 'curved'](points[0], points[1], offsetWidth, anchor);\n        var strokeWidth = thickness ? parseMetricToNum(theme.global.edgeSize[thickness] || thickness) : 1;\n        var colorName = color || theme.diagram.line && theme.diagram.line.color;\n\n        if (!colorName) {\n          var colors = Object.keys(theme.global.colors).filter(function (n) {\n            return n.match(/^graph-[0-9]$/);\n          });\n          colorName = colors[index % colors.length];\n        }\n\n        path = /*#__PURE__*/React.createElement(\"path\", _extends({\n          // eslint-disable-next-line react/no-array-index-key\n          key: index,\n          animation: animation\n        }, cleanedRest, {\n          stroke: normalizeColor(colorName, theme),\n          strokeWidth: strokeWidth,\n          strokeLinecap: round ? 'round' : 'butt',\n          strokeLinejoin: round ? 'round' : 'miter',\n          fill: \"none\",\n          d: d\n        }));\n      }\n\n      return path;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StyledDiagram, _extends({\n    ref: svgRef,\n    viewBox: \"0 0 \" + dimensions.width + \" \" + dimensions.height,\n    preserveAspectRatio: \"xMinYMin meet\",\n    connections: paths\n  }, rest), /*#__PURE__*/React.createElement(\"g\", null, paths));\n});\nDiagram.displayName = 'Diagram';\nDiagram.defaultProps = {\n  connections: []\n};\nDiagram.propTypes = DiagramPropTypes;\nexport { Diagram };","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/node_modules/grommet/es6/components/Diagram/Diagram.js"],"names":["_excluded","_excluded2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useCallback","useContext","useEffect","useRef","useState","ThemeContext","defaultProps","normalizeColor","parseMetricToNum","useForwardedRef","StyledDiagram","DiagramPropTypes","computeMidPoint","fromPoint","toPoint","COMMANDS","curved","offset","anchor","midPoint","cmds","direct","rectilinear","findTarget","document","getElementById","Diagram","_ref","ref","connections","rest","theme","_useState","width","height","dimensions","setDimensions","_useState2","connectionPoints","setConnectionPoints","svgRef","undefined","onResize","svg","current","rect","getBoundingClientRect","savedOnResize","onResizeHandler","event","window","addEventListener","removeEventListener","placeConnections","containerRect","updatedConnectionPoints","map","_ref2","fromTarget","toTarget","points","fromElement","toElement","console","warn","fromRect","toRect","left","top","paths","_ref3","index","animation","color","round","thickness","type","connectionRest","path","cleanedRest","offsetWidth","global","edgeSize","d","strokeWidth","colorName","diagram","line","colors","filter","n","match","createElement","stroke","strokeLinecap","strokeLinejoin","fill","viewBox","preserveAspectRatio","displayName","propTypes"],"mappings":"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","sourcesContent":["var _excluded = [\"connections\"],\n    _excluded2 = [\"anchor\", \"animation\", \"color\", \"offset\", \"round\", \"thickness\", \"type\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { normalizeColor, parseMetricToNum, useForwardedRef } from '../../utils';\nimport { StyledDiagram } from './StyledDiagram';\nimport { DiagramPropTypes } from './propTypes';\n\nvar computeMidPoint = function computeMidPoint(fromPoint, toPoint) {\n  return [fromPoint[0] > toPoint[0] ? toPoint[0] + (fromPoint[0] - toPoint[0]) / 2 : fromPoint[0] + (toPoint[0] - fromPoint[0]) / 2, fromPoint[1] > toPoint[1] ? toPoint[1] + (fromPoint[1] - toPoint[1]) / 2 : fromPoint[1] + (toPoint[1] - fromPoint[1]) / 2];\n};\n\nvar COMMANDS = {\n  curved: function curved(fromPoint, toPoint, offset, anchor) {\n    var midPoint = computeMidPoint(fromPoint, toPoint);\n    var cmds = \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \";\n\n    if (anchor === 'horizontal') {\n      cmds += \"Q \" + (midPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (midPoint[0] + offset + \",\" + (midPoint[1] + offset) + \" \");\n    } else {\n      cmds += \"Q \" + (fromPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \" + (midPoint[0] + offset + \",\" + (midPoint[1] + offset) + \" \");\n    }\n\n    cmds += \"T \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset);\n    return cmds;\n  },\n  direct: function direct(fromPoint, toPoint, offset) {\n    return \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (\"L \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset));\n  },\n  rectilinear: function rectilinear(fromPoint, toPoint, offset, anchor) {\n    var midPoint = computeMidPoint(fromPoint, toPoint);\n    var cmds = \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \";\n\n    if (anchor === 'horizontal') {\n      cmds += \"L \" + (midPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (\"L \" + (midPoint[0] + offset) + \",\" + (toPoint[1] + offset) + \" \");\n    } else {\n      cmds += \"L \" + (fromPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \" + (\"L \" + (toPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \");\n    }\n\n    cmds += \"L \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset);\n    return cmds;\n  }\n};\n\nvar findTarget = function findTarget(target) {\n  if (typeof target === 'string') {\n    return document.getElementById(target);\n  }\n\n  return target;\n};\n\nvar Diagram = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var connections = _ref.connections,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      dimensions = _useState[0],\n      setDimensions = _useState[1];\n\n  var _useState2 = useState(),\n      connectionPoints = _useState2[0],\n      setConnectionPoints = _useState2[1];\n\n  var svgRef = useForwardedRef(ref);\n  useEffect(function () {\n    setConnectionPoints(undefined);\n  }, [connections]);\n  var onResize = useCallback(function () {\n    var svg = svgRef.current;\n\n    if (svg) {\n      var rect = svg.getBoundingClientRect();\n\n      if (rect.width !== dimensions.width || rect.height !== dimensions.height) {\n        setDimensions({\n          width: rect.width,\n          height: rect.height\n        });\n        setConnectionPoints(undefined);\n      }\n    }\n  }, [dimensions.width, dimensions.height, svgRef]); // Ref that stores resize handler\n\n  var savedOnResize = useRef(); // Update resize ref value if onResize changes.\n  // This allows our effect below to always get latest handler\n\n  useEffect(function () {\n    savedOnResize.current = onResize;\n  }, [onResize]);\n  useEffect(function () {\n    var onResizeHandler = function onResizeHandler(event) {\n      return savedOnResize.current(event);\n    };\n\n    onResizeHandler();\n    window.addEventListener('resize', onResizeHandler);\n    return function () {\n      window.removeEventListener('resize', onResizeHandler);\n    };\n  }, []);\n  var placeConnections = useCallback(function () {\n    var containerRect = svgRef.current.getBoundingClientRect();\n    var updatedConnectionPoints = connections.map(function (_ref2) {\n      var anchor = _ref2.anchor,\n          fromTarget = _ref2.fromTarget,\n          toTarget = _ref2.toTarget;\n      var points;\n      var fromElement = findTarget(fromTarget);\n      var toElement = findTarget(toTarget);\n\n      if (!fromElement) {\n        console.warn(\"Diagram cannot find \" + fromTarget);\n      }\n\n      if (!toElement) {\n        console.warn(\"Diagram cannot find \" + toTarget);\n      }\n\n      if (fromElement && toElement) {\n        var fromRect = fromElement.getBoundingClientRect();\n        var toRect = toElement.getBoundingClientRect(); // There is no x and y when unit testing.\n\n        var fromPoint = [fromRect.left - containerRect.left || 0, fromRect.top - containerRect.top || 0];\n        var toPoint = [toRect.left - containerRect.left || 0, toRect.top - containerRect.top || 0];\n\n        if (anchor === 'vertical') {\n          fromPoint[0] += fromRect.width / 2;\n          toPoint[0] += toRect.width / 2;\n\n          if (fromRect.top < toRect.top) {\n            fromPoint[1] += fromRect.height;\n          } else {\n            toPoint[1] += toRect.height;\n          }\n        } else if (anchor === 'horizontal') {\n          fromPoint[1] += fromRect.height / 2;\n          toPoint[1] += toRect.height / 2;\n\n          if (fromRect.left < toRect.left) {\n            fromPoint[0] += fromRect.width;\n          } else {\n            toPoint[0] += toRect.width;\n          }\n        } else {\n          // center\n          fromPoint[0] += fromRect.width / 2;\n          fromPoint[1] += fromRect.height / 2;\n          toPoint[0] += toRect.width / 2;\n          toPoint[1] += toRect.height / 2;\n        }\n\n        points = [fromPoint, toPoint];\n      }\n\n      return points;\n    });\n    setConnectionPoints(updatedConnectionPoints);\n  }, [connections, svgRef]);\n  useEffect(function () {\n    if (!connectionPoints) {\n      placeConnections();\n    }\n  }, [connectionPoints, placeConnections]);\n  var paths;\n\n  if (connectionPoints) {\n    paths = connections.map(function (_ref3, index) {\n      var anchor = _ref3.anchor,\n          animation = _ref3.animation,\n          color = _ref3.color,\n          offset = _ref3.offset,\n          round = _ref3.round,\n          thickness = _ref3.thickness,\n          type = _ref3.type,\n          connectionRest = _objectWithoutPropertiesLoose(_ref3, _excluded2);\n\n      var path;\n\n      var cleanedRest = _extends({}, connectionRest);\n\n      delete cleanedRest.fromTarget;\n      delete cleanedRest.toTarget;\n      var points = connectionPoints[index];\n\n      if (points) {\n        var offsetWidth = offset ? parseMetricToNum(theme.global.edgeSize[offset]) : 0;\n        var d = COMMANDS[type || 'curved'](points[0], points[1], offsetWidth, anchor);\n        var strokeWidth = thickness ? parseMetricToNum(theme.global.edgeSize[thickness] || thickness) : 1;\n        var colorName = color || theme.diagram.line && theme.diagram.line.color;\n\n        if (!colorName) {\n          var colors = Object.keys(theme.global.colors).filter(function (n) {\n            return n.match(/^graph-[0-9]$/);\n          });\n          colorName = colors[index % colors.length];\n        }\n\n        path = /*#__PURE__*/React.createElement(\"path\", _extends({\n          // eslint-disable-next-line react/no-array-index-key\n          key: index,\n          animation: animation\n        }, cleanedRest, {\n          stroke: normalizeColor(colorName, theme),\n          strokeWidth: strokeWidth,\n          strokeLinecap: round ? 'round' : 'butt',\n          strokeLinejoin: round ? 'round' : 'miter',\n          fill: \"none\",\n          d: d\n        }));\n      }\n\n      return path;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StyledDiagram, _extends({\n    ref: svgRef,\n    viewBox: \"0 0 \" + dimensions.width + \" \" + dimensions.height,\n    preserveAspectRatio: \"xMinYMin meet\",\n    connections: paths\n  }, rest), /*#__PURE__*/React.createElement(\"g\", null, paths));\n});\nDiagram.displayName = 'Diagram';\nDiagram.defaultProps = {\n  connections: []\n};\nDiagram.propTypes = DiagramPropTypes;\nexport { Diagram };"]},"metadata":{},"sourceType":"module"}