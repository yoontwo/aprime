{"ast":null,"code":"import React, { Children, cloneElement, useContext, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Box } from '../Box';\nimport { Text } from '../Text';\nimport { Layer } from '../Layer';\nimport { defaultProps } from '../../default-props';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { SkipLinksPropTypes } from './propTypes';\n\nvar SkipLinks = function SkipLinks(_ref) {\n  var children = _ref.children,\n      id = _ref.id,\n      messages = _ref.messages;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useState = useState(false),\n      showLayer = _useState[0],\n      setShowLayer = _useState[1];\n\n  var _useContext = useContext(MessageContext),\n      format = _useContext.format;\n\n  var layerRef = useRef(null);\n\n  var onFocus = function onFocus() {\n    setShowLayer(true);\n  };\n\n  var removeLayer = function removeLayer() {\n    setShowLayer(false);\n  };\n\n  var onBlur = function onBlur() {\n    // timeout needed so it gives enough time for activeElement to be updated\n    setTimeout(function () {\n      var layerNode = layerRef.current;\n\n      if (layerNode && !layerNode.contains(document.activeElement)) {\n        // close the layer when the activeElement isn't contained in the layer\n        removeLayer();\n      }\n    }, 0);\n  };\n\n  return /*#__PURE__*/React.createElement(Layer, {\n    id: id,\n    position: showLayer ? theme.skipLinks.position : 'hidden',\n    ref: layerRef,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    modal: false // Prepend the Layer so any SkipLink will be the first element that\n    // pressing the Tab key reaches, targetChildPosition triggers prepend.\n    ,\n    targetChildPosition: \"first\" // Non-modal Layer's will take the full screen at small breakpoints\n    // by default, which isn't what we want, hence setting responsive false\n    ,\n    responsive: false\n  }, /*#__PURE__*/React.createElement(Box, theme.skipLinks.container, /*#__PURE__*/React.createElement(Text, theme.skipLinks.label, format({\n    id: 'skipLinks.skipTo',\n    messages: messages\n  })), /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    gap: \"medium\"\n  }, Children.map(children, function (child, index) {\n    return /*#__PURE__*/cloneElement(child, {\n      key: \"skip-link-\" + index,\n      onClick: removeLayer\n    });\n  }))));\n};\n\nSkipLinks.defaultProps = {};\nSkipLinks.propTypes = SkipLinksPropTypes;\nexport { SkipLinks };","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/node_modules/grommet/es6/components/SkipLinks/SkipLinks.js"],"names":["React","Children","cloneElement","useContext","useRef","useState","ThemeContext","Box","Text","Layer","defaultProps","MessageContext","SkipLinksPropTypes","SkipLinks","_ref","children","id","messages","theme","_useState","showLayer","setShowLayer","_useContext","format","layerRef","onFocus","removeLayer","onBlur","setTimeout","layerNode","current","contains","document","activeElement","createElement","position","skipLinks","ref","modal","targetChildPosition","responsive","container","label","align","gap","map","child","index","key","onClick","propTypes"],"mappings":"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","sourcesContent":["import React, { Children, cloneElement, useContext, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Box } from '../Box';\nimport { Text } from '../Text';\nimport { Layer } from '../Layer';\nimport { defaultProps } from '../../default-props';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { SkipLinksPropTypes } from './propTypes';\n\nvar SkipLinks = function SkipLinks(_ref) {\n  var children = _ref.children,\n      id = _ref.id,\n      messages = _ref.messages;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useState = useState(false),\n      showLayer = _useState[0],\n      setShowLayer = _useState[1];\n\n  var _useContext = useContext(MessageContext),\n      format = _useContext.format;\n\n  var layerRef = useRef(null);\n\n  var onFocus = function onFocus() {\n    setShowLayer(true);\n  };\n\n  var removeLayer = function removeLayer() {\n    setShowLayer(false);\n  };\n\n  var onBlur = function onBlur() {\n    // timeout needed so it gives enough time for activeElement to be updated\n    setTimeout(function () {\n      var layerNode = layerRef.current;\n\n      if (layerNode && !layerNode.contains(document.activeElement)) {\n        // close the layer when the activeElement isn't contained in the layer\n        removeLayer();\n      }\n    }, 0);\n  };\n\n  return /*#__PURE__*/React.createElement(Layer, {\n    id: id,\n    position: showLayer ? theme.skipLinks.position : 'hidden',\n    ref: layerRef,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    modal: false // Prepend the Layer so any SkipLink will be the first element that\n    // pressing the Tab key reaches, targetChildPosition triggers prepend.\n    ,\n    targetChildPosition: \"first\" // Non-modal Layer's will take the full screen at small breakpoints\n    // by default, which isn't what we want, hence setting responsive false\n    ,\n    responsive: false\n  }, /*#__PURE__*/React.createElement(Box, theme.skipLinks.container, /*#__PURE__*/React.createElement(Text, theme.skipLinks.label, format({\n    id: 'skipLinks.skipTo',\n    messages: messages\n  })), /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    gap: \"medium\"\n  }, Children.map(children, function (child, index) {\n    return /*#__PURE__*/cloneElement(child, {\n      key: \"skip-link-\" + index,\n      onClick: removeLayer\n    });\n  }))));\n};\n\nSkipLinks.defaultProps = {};\nSkipLinks.propTypes = SkipLinksPropTypes;\nexport { SkipLinks };"]},"metadata":{},"sourceType":"module"}