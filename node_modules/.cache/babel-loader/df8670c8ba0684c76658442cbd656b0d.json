{"ast":null,"code":"var _excluded = [\"alignSelf\", \"autoPlay\", \"children\", \"controls\", \"gridArea\", \"loop\", \"margin\", \"messages\", \"mute\", \"onDurationChange\", \"onEnded\", \"onPause\", \"onPlay\", \"onTimeUpdate\", \"onVolumeChange\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Menu } from '../Menu';\nimport { Meter } from '../Meter';\nimport { Stack } from '../Stack';\nimport { Text } from '../Text';\nimport { containsFocus, useForwardedRef } from '../../utils';\nimport { StyledVideo, StyledVideoContainer, StyledVideoControls, StyledVideoScrubber } from './StyledVideo';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { VideoPropTypes } from './propTypes'; // Split the volume control into 6 segments. Empirically determined.\n\nvar VOLUME_STEP = 0.166667;\n\nvar formatTime = function formatTime(time) {\n  var minutes = Math.round(time / 60);\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n\n  var seconds = Math.round(time) % 60;\n\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n\n  return minutes + \":\" + seconds;\n};\n\nvar Video = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var alignSelf = _ref.alignSelf,\n      autoPlay = _ref.autoPlay,\n      children = _ref.children,\n      _ref$controls = _ref.controls,\n      controls = _ref$controls === void 0 ? 'over' : _ref$controls,\n      gridArea = _ref.gridArea,\n      loop = _ref.loop,\n      margin = _ref.margin,\n      messages = _ref.messages,\n      mute = _ref.mute,\n      _onDurationChange = _ref.onDurationChange,\n      _onEnded = _ref.onEnded,\n      _onPause = _ref.onPause,\n      _onPlay = _ref.onPlay,\n      _onTimeUpdate = _ref.onTimeUpdate,\n      _onVolumeChange = _ref.onVolumeChange,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useContext = useContext(MessageContext),\n      format = _useContext.format;\n\n  var _useState = useState([]),\n      captions = _useState[0],\n      setCaptions = _useState[1];\n\n  var _useState2 = useState(),\n      currentTime = _useState2[0],\n      setCurrentTime = _useState2[1];\n\n  var _useState3 = useState(),\n      duration = _useState3[0],\n      setDuration = _useState3[1];\n\n  var _useState4 = useState(),\n      percentagePlayed = _useState4[0],\n      setPercentagePlayed = _useState4[1];\n\n  var _useState5 = useState(false),\n      playing = _useState5[0],\n      setPlaying = _useState5[1];\n\n  var _useState6 = useState(),\n      scrubTime = _useState6[0],\n      setScrubTime = _useState6[1];\n\n  var _useState7 = useState(),\n      volume = _useState7[0],\n      setVolume = _useState7[1];\n\n  var _useState8 = useState(false),\n      hasPlayed = _useState8[0],\n      setHasPlayed = _useState8[1];\n\n  var _useState9 = useState(),\n      interacting = _useState9[0],\n      setInteracting = _useState9[1];\n\n  var _useState10 = useState(),\n      height = _useState10[0],\n      setHeight = _useState10[1];\n\n  var _useState11 = useState(),\n      width = _useState11[0],\n      setWidth = _useState11[1];\n\n  var containerRef = useRef();\n  var scrubberRef = useRef();\n  var videoRef = useForwardedRef(ref); // mute if needed\n\n  useEffect(function () {\n    var video = videoRef.current;\n    if (video && mute) video.muted = true;\n  }, [mute, videoRef]); // when the video is first rendered, set state from it where needed\n\n  useEffect(function () {\n    var video = videoRef.current;\n\n    if (video) {\n      // hide all captioning to start with\n      var textTracks = video.textTracks;\n\n      for (var i = 0; i < textTracks.length; i += 1) {\n        textTracks[i].mode = 'hidden';\n      }\n\n      setCurrentTime(video.currentTime);\n      setPercentagePlayed(video.currentTime / video.duration * 100);\n      setVolume(videoRef.current.volume);\n    }\n  }, [videoRef]); // turn off interacting after a while\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (interacting && !containsFocus(containerRef.current)) {\n        setInteracting(false);\n      }\n    }, 3000);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [interacting]);\n  useLayoutEffect(function () {\n    var video = videoRef.current;\n\n    if (video) {\n      if (video.videoHeight) {\n        // set the size based on the video aspect ratio\n        var rect = video.getBoundingClientRect();\n        var ratio = rect.width / rect.height;\n        var videoRatio = video.videoWidth / video.videoHeight;\n\n        if (videoRatio > ratio) {\n          var nextHeight = rect.width / videoRatio;\n\n          if (nextHeight !== height) {\n            setHeight(nextHeight);\n            setWidth(undefined);\n          }\n        } else {\n          var nextWidth = rect.height * videoRatio;\n\n          if (nextWidth !== width) {\n            setHeight(undefined);\n            setWidth(nextWidth);\n          }\n        }\n      } // remember the state of the text tracks for subsequent rendering\n\n\n      var textTracks = video.textTracks;\n\n      if (textTracks.length > 0) {\n        if (textTracks.length === 1) {\n          var active = textTracks[0].mode === 'showing';\n\n          if (!captions || !captions[0] || captions[0].active !== active) {\n            setCaptions([{\n              active: active\n            }]);\n          }\n        } else {\n          var nextCaptions = [];\n          var set = false;\n\n          for (var i = 0; i < textTracks.length; i += 1) {\n            var track = textTracks[i];\n\n            var _active = track.mode === 'showing';\n\n            nextCaptions.push({\n              label: track.label,\n              active: _active\n            });\n\n            if (!captions || !captions[i] || captions[i].active !== _active) {\n              set = true;\n            }\n          }\n\n          if (set) {\n            setCaptions(nextCaptions);\n          }\n        }\n      }\n    }\n  }, [captions, height, videoRef, width]);\n  var play = useCallback(function () {\n    return videoRef.current.play();\n  }, [videoRef]);\n  var pause = useCallback(function () {\n    return videoRef.current.pause();\n  }, [videoRef]);\n  var scrub = useCallback(function (event) {\n    if (scrubberRef.current) {\n      var scrubberRect = scrubberRef.current.getBoundingClientRect();\n      var percent = (event.clientX - scrubberRect.left) / scrubberRect.width;\n      setScrubTime(duration * percent);\n    }\n  }, [duration]);\n  var seek = useCallback(function (event) {\n    if (scrubberRef.current) {\n      var scrubberRect = scrubberRef.current.getBoundingClientRect();\n      var percent = (event.clientX - scrubberRect.left) / scrubberRect.width;\n      if (duration) videoRef.current.currentTime = duration * percent;\n    }\n  }, [duration, videoRef]);\n  var louder = useCallback(function () {\n    videoRef.current.volume += VOLUME_STEP;\n  }, [videoRef]);\n  var quieter = useCallback(function () {\n    videoRef.current.volume -= VOLUME_STEP;\n  }, [videoRef]);\n\n  var showCaptions = function showCaptions(index) {\n    var textTracks = videoRef.current.textTracks;\n\n    for (var i = 0; i < textTracks.length; i += 1) {\n      textTracks[i].mode = i === index ? 'showing' : 'hidden';\n    }\n  };\n\n  var fullscreen = useCallback(function () {\n    var video = videoRef.current;\n\n    if (video.requestFullscreen) {\n      video.requestFullscreen();\n    } else if (video.msRequestFullscreen) {\n      video.msRequestFullscreen();\n    } else if (video.mozRequestFullScreen) {\n      video.mozRequestFullScreen();\n    } else if (video.webkitRequestFullscreen) {\n      video.webkitRequestFullscreen();\n    } else {\n      console.warn(\"This browser doesn't support fullscreen.\");\n    }\n  }, [videoRef]);\n  var controlsElement;\n\n  if (controls) {\n    var over = controls === 'over';\n    var background = over ? theme.video.controls && theme.video.controls.background || {\n      color: 'background-back',\n      opacity: 'strong',\n      dark: true\n    } : undefined;\n    var iconColor = over && (theme.video.icons.color || 'text');\n    var formattedTime = formatTime(scrubTime || currentTime || duration);\n    var Icons = {\n      ClosedCaption: theme.video.icons.closedCaption,\n      Configure: theme.video.icons.configure,\n      FullScreen: theme.video.icons.fullScreen,\n      Pause: theme.video.icons.pause,\n      Play: theme.video.icons.play,\n      ReduceVolume: theme.video.icons.reduceVolume,\n      Volume: theme.video.icons.volume\n    };\n    var captionControls = captions.map(function (caption) {\n      return {\n        icon: caption.label ? undefined : /*#__PURE__*/React.createElement(Icons.ClosedCaption, {\n          color: iconColor\n        }),\n        label: caption.label,\n        active: caption.active,\n        onClick: function onClick() {\n          return showCaptions(caption.active ? -1 : 0);\n        }\n      };\n    });\n    controlsElement = /*#__PURE__*/React.createElement(StyledVideoControls, {\n      over: over,\n      active: !hasPlayed || controls === 'below' || over && interacting,\n      onBlur: function onBlur() {\n        if (!containsFocus(containerRef.current)) setInteracting(false);\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      direction: \"row\",\n      align: \"center\",\n      justify: \"between\",\n      background: background\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: playing ? /*#__PURE__*/React.createElement(Icons.Pause, {\n        color: iconColor,\n        a11yTitle: format({\n          id: 'video.pauseButton',\n          messages: messages\n        })\n      }) : /*#__PURE__*/React.createElement(Icons.Play, {\n        color: iconColor,\n        a11yTitle: format({\n          id: 'video.playButton',\n          messages: messages\n        })\n      }),\n      hoverIndicator: \"background\",\n      onClick: playing ? pause : play\n    }), /*#__PURE__*/React.createElement(Box, {\n      direction: \"row\",\n      align: \"center\",\n      flex: true\n    }, /*#__PURE__*/React.createElement(Box, {\n      flex: true\n    }, /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Meter, {\n      \"aria-label\": format({\n        id: 'video.progressMeter',\n        messages: messages\n      }),\n      background: over ? theme.video.scrubber && theme.video.scrubber.track && theme.video.scrubber.track.color || 'dark-3' : undefined,\n      size: \"full\",\n      thickness: \"small\",\n      values: [{\n        value: percentagePlayed || 0\n      }]\n    }), /*#__PURE__*/React.createElement(StyledVideoScrubber, {\n      \"aria-label\": format({\n        id: 'video.scrubber',\n        messages: messages\n      }),\n      ref: scrubberRef,\n      tabIndex: 0,\n      role: \"button\",\n      value: scrubTime ? Math.round(scrubTime / duration * 100) : undefined,\n      onMouseMove: scrub,\n      onMouseLeave: function onMouseLeave() {\n        return setScrubTime(undefined);\n      },\n      onClick: seek\n    }))), /*#__PURE__*/React.createElement(Box, {\n      pad: {\n        horizontal: 'small'\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      margin: \"none\"\n    }, formattedTime))), /*#__PURE__*/React.createElement(Menu, {\n      icon: /*#__PURE__*/React.createElement(Icons.Configure, {\n        color: iconColor\n      }),\n      dropAlign: {\n        bottom: 'top',\n        right: 'right'\n      },\n      dropBackground: background,\n      messages: {\n        openMenu: format({\n          id: 'video.openMenu',\n          messages: messages\n        }),\n        closeMenu: format({\n          id: 'video.closeMenu',\n          messages: messages\n        })\n      },\n      items: [{\n        icon: /*#__PURE__*/React.createElement(Icons.Volume, {\n          color: iconColor,\n          a11yTitle: format({\n            id: 'video.volumeUp',\n            messages: messages\n          })\n        }),\n        onClick: volume <= 1 - VOLUME_STEP ? louder : undefined,\n        close: false\n      }, {\n        icon: /*#__PURE__*/React.createElement(Icons.ReduceVolume, {\n          color: iconColor,\n          a11yTitle: format({\n            id: 'video.volumeDown',\n            messages: messages\n          })\n        }),\n        onClick: volume >= VOLUME_STEP ? quieter : undefined,\n        close: false\n      }].concat(captionControls, [{\n        icon: /*#__PURE__*/React.createElement(Icons.FullScreen, {\n          color: iconColor,\n          a11yTitle: format({\n            id: 'video.fullScreen',\n            messages: messages\n          })\n        }),\n        onClick: fullscreen\n      }])\n    })));\n  }\n\n  var mouseEventListeners;\n\n  if (controls === 'over') {\n    mouseEventListeners = {\n      onMouseEnter: function onMouseEnter() {\n        return setInteracting(true);\n      },\n      onMouseMove: function onMouseMove() {\n        return setInteracting(true);\n      },\n      onTouchStart: function onTouchStart() {\n        return setInteracting(true);\n      }\n    };\n  }\n\n  var style;\n\n  if (rest.fit === 'contain' && controls === 'over') {\n    // constrain the size to fit the aspect ratio so the controls\n    // overlap correctly\n    if (width) {\n      style = {\n        width: width\n      };\n    } else if (height) {\n      style = {\n        height: height\n      };\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(StyledVideoContainer, _extends({\n    ref: containerRef\n  }, mouseEventListeners, {\n    alignSelf: alignSelf,\n    gridArea: gridArea,\n    margin: margin,\n    style: style\n  }), /*#__PURE__*/React.createElement(StyledVideo, _extends({}, rest, {\n    ref: videoRef,\n    onDurationChange: function onDurationChange(event) {\n      var video = videoRef.current;\n      setDuration(video.duration);\n      setPercentagePlayed(video.currentTime / video.duration * 100);\n      if (_onDurationChange) _onDurationChange(event);\n    },\n    onEnded: function onEnded(event) {\n      setPlaying(false);\n      if (_onEnded) _onEnded(event);\n    },\n    onPause: function onPause(event) {\n      setPlaying(false);\n      if (_onPause) _onPause(event);\n    },\n    onPlay: function onPlay(event) {\n      setPlaying(true);\n      setHasPlayed(true);\n      if (_onPlay) _onPlay(event);\n    },\n    onTimeUpdate: function onTimeUpdate(event) {\n      var video = videoRef.current;\n      setCurrentTime(video.currentTime);\n      setPercentagePlayed(video.currentTime / video.duration * 100);\n      if (_onTimeUpdate) _onTimeUpdate(event);\n    },\n    onVolumeChange: function onVolumeChange(event) {\n      setVolume(videoRef.current.volume);\n      if (_onVolumeChange) _onVolumeChange(event);\n    },\n    autoPlay: autoPlay || false,\n    loop: loop || false\n  }), children), controlsElement);\n});\nVideo.defaultProps = {};\nVideo.displayName = 'Video';\nVideo.propTypes = VideoPropTypes;\nexport { Video };","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/node_modules/grommet/es6/components/Video/Video.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useCallback","useContext","useEffect","useRef","useState","ThemeContext","useLayoutEffect","defaultProps","Box","Button","Menu","Meter","Stack","Text","containsFocus","useForwardedRef","StyledVideo","StyledVideoContainer","StyledVideoControls","StyledVideoScrubber","MessageContext","VideoPropTypes","VOLUME_STEP","formatTime","time","minutes","Math","round","seconds","Video","_ref","ref","alignSelf","autoPlay","children","_ref$controls","controls","gridArea","loop","margin","messages","mute","_onDurationChange","onDurationChange","_onEnded","onEnded","_onPause","onPause","_onPlay","onPlay","_onTimeUpdate","onTimeUpdate","_onVolumeChange","onVolumeChange","rest","theme","_useContext","format","_useState","captions","setCaptions","_useState2","currentTime","setCurrentTime","_useState3","duration","setDuration","_useState4","percentagePlayed","setPercentagePlayed","_useState5","playing","setPlaying","_useState6","scrubTime","setScrubTime","_useState7","volume","setVolume","_useState8","hasPlayed","setHasPlayed","_useState9","interacting","setInteracting","_useState10","height","setHeight","_useState11","width","setWidth","containerRef","scrubberRef","videoRef","video","current","muted","textTracks","mode","timer","setTimeout","clearTimeout","videoHeight","rect","getBoundingClientRect","ratio","videoRatio","videoWidth","nextHeight","undefined","nextWidth","active","nextCaptions","set","track","_active","push","label","play","pause","scrub","event","scrubberRect","percent","clientX","left","seek","louder","quieter","showCaptions","index","fullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","console","warn","controlsElement","over","background","color","opacity","dark","iconColor","icons","formattedTime","Icons","ClosedCaption","closedCaption","Configure","configure","FullScreen","fullScreen","Pause","Play","ReduceVolume","reduceVolume","Volume","captionControls","map","caption","icon","createElement","onClick","onBlur","direction","align","justify","a11yTitle","id","hoverIndicator","flex","scrubber","size","thickness","values","value","tabIndex","role","onMouseMove","onMouseLeave","pad","horizontal","dropAlign","bottom","right","dropBackground","openMenu","closeMenu","items","close","concat","mouseEventListeners","onMouseEnter","onTouchStart","style","fit","displayName","propTypes"],"mappings":"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","sourcesContent":["var _excluded = [\"alignSelf\", \"autoPlay\", \"children\", \"controls\", \"gridArea\", \"loop\", \"margin\", \"messages\", \"mute\", \"onDurationChange\", \"onEnded\", \"onPause\", \"onPlay\", \"onTimeUpdate\", \"onVolumeChange\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Menu } from '../Menu';\nimport { Meter } from '../Meter';\nimport { Stack } from '../Stack';\nimport { Text } from '../Text';\nimport { containsFocus, useForwardedRef } from '../../utils';\nimport { StyledVideo, StyledVideoContainer, StyledVideoControls, StyledVideoScrubber } from './StyledVideo';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { VideoPropTypes } from './propTypes'; // Split the volume control into 6 segments. Empirically determined.\n\nvar VOLUME_STEP = 0.166667;\n\nvar formatTime = function formatTime(time) {\n  var minutes = Math.round(time / 60);\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n\n  var seconds = Math.round(time) % 60;\n\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n\n  return minutes + \":\" + seconds;\n};\n\nvar Video = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var alignSelf = _ref.alignSelf,\n      autoPlay = _ref.autoPlay,\n      children = _ref.children,\n      _ref$controls = _ref.controls,\n      controls = _ref$controls === void 0 ? 'over' : _ref$controls,\n      gridArea = _ref.gridArea,\n      loop = _ref.loop,\n      margin = _ref.margin,\n      messages = _ref.messages,\n      mute = _ref.mute,\n      _onDurationChange = _ref.onDurationChange,\n      _onEnded = _ref.onEnded,\n      _onPause = _ref.onPause,\n      _onPlay = _ref.onPlay,\n      _onTimeUpdate = _ref.onTimeUpdate,\n      _onVolumeChange = _ref.onVolumeChange,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useContext = useContext(MessageContext),\n      format = _useContext.format;\n\n  var _useState = useState([]),\n      captions = _useState[0],\n      setCaptions = _useState[1];\n\n  var _useState2 = useState(),\n      currentTime = _useState2[0],\n      setCurrentTime = _useState2[1];\n\n  var _useState3 = useState(),\n      duration = _useState3[0],\n      setDuration = _useState3[1];\n\n  var _useState4 = useState(),\n      percentagePlayed = _useState4[0],\n      setPercentagePlayed = _useState4[1];\n\n  var _useState5 = useState(false),\n      playing = _useState5[0],\n      setPlaying = _useState5[1];\n\n  var _useState6 = useState(),\n      scrubTime = _useState6[0],\n      setScrubTime = _useState6[1];\n\n  var _useState7 = useState(),\n      volume = _useState7[0],\n      setVolume = _useState7[1];\n\n  var _useState8 = useState(false),\n      hasPlayed = _useState8[0],\n      setHasPlayed = _useState8[1];\n\n  var _useState9 = useState(),\n      interacting = _useState9[0],\n      setInteracting = _useState9[1];\n\n  var _useState10 = useState(),\n      height = _useState10[0],\n      setHeight = _useState10[1];\n\n  var _useState11 = useState(),\n      width = _useState11[0],\n      setWidth = _useState11[1];\n\n  var containerRef = useRef();\n  var scrubberRef = useRef();\n  var videoRef = useForwardedRef(ref); // mute if needed\n\n  useEffect(function () {\n    var video = videoRef.current;\n    if (video && mute) video.muted = true;\n  }, [mute, videoRef]); // when the video is first rendered, set state from it where needed\n\n  useEffect(function () {\n    var video = videoRef.current;\n\n    if (video) {\n      // hide all captioning to start with\n      var textTracks = video.textTracks;\n\n      for (var i = 0; i < textTracks.length; i += 1) {\n        textTracks[i].mode = 'hidden';\n      }\n\n      setCurrentTime(video.currentTime);\n      setPercentagePlayed(video.currentTime / video.duration * 100);\n      setVolume(videoRef.current.volume);\n    }\n  }, [videoRef]); // turn off interacting after a while\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (interacting && !containsFocus(containerRef.current)) {\n        setInteracting(false);\n      }\n    }, 3000);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [interacting]);\n  useLayoutEffect(function () {\n    var video = videoRef.current;\n\n    if (video) {\n      if (video.videoHeight) {\n        // set the size based on the video aspect ratio\n        var rect = video.getBoundingClientRect();\n        var ratio = rect.width / rect.height;\n        var videoRatio = video.videoWidth / video.videoHeight;\n\n        if (videoRatio > ratio) {\n          var nextHeight = rect.width / videoRatio;\n\n          if (nextHeight !== height) {\n            setHeight(nextHeight);\n            setWidth(undefined);\n          }\n        } else {\n          var nextWidth = rect.height * videoRatio;\n\n          if (nextWidth !== width) {\n            setHeight(undefined);\n            setWidth(nextWidth);\n          }\n        }\n      } // remember the state of the text tracks for subsequent rendering\n\n\n      var textTracks = video.textTracks;\n\n      if (textTracks.length > 0) {\n        if (textTracks.length === 1) {\n          var active = textTracks[0].mode === 'showing';\n\n          if (!captions || !captions[0] || captions[0].active !== active) {\n            setCaptions([{\n              active: active\n            }]);\n          }\n        } else {\n          var nextCaptions = [];\n          var set = false;\n\n          for (var i = 0; i < textTracks.length; i += 1) {\n            var track = textTracks[i];\n\n            var _active = track.mode === 'showing';\n\n            nextCaptions.push({\n              label: track.label,\n              active: _active\n            });\n\n            if (!captions || !captions[i] || captions[i].active !== _active) {\n              set = true;\n            }\n          }\n\n          if (set) {\n            setCaptions(nextCaptions);\n          }\n        }\n      }\n    }\n  }, [captions, height, videoRef, width]);\n  var play = useCallback(function () {\n    return videoRef.current.play();\n  }, [videoRef]);\n  var pause = useCallback(function () {\n    return videoRef.current.pause();\n  }, [videoRef]);\n  var scrub = useCallback(function (event) {\n    if (scrubberRef.current) {\n      var scrubberRect = scrubberRef.current.getBoundingClientRect();\n      var percent = (event.clientX - scrubberRect.left) / scrubberRect.width;\n      setScrubTime(duration * percent);\n    }\n  }, [duration]);\n  var seek = useCallback(function (event) {\n    if (scrubberRef.current) {\n      var scrubberRect = scrubberRef.current.getBoundingClientRect();\n      var percent = (event.clientX - scrubberRect.left) / scrubberRect.width;\n      if (duration) videoRef.current.currentTime = duration * percent;\n    }\n  }, [duration, videoRef]);\n  var louder = useCallback(function () {\n    videoRef.current.volume += VOLUME_STEP;\n  }, [videoRef]);\n  var quieter = useCallback(function () {\n    videoRef.current.volume -= VOLUME_STEP;\n  }, [videoRef]);\n\n  var showCaptions = function showCaptions(index) {\n    var textTracks = videoRef.current.textTracks;\n\n    for (var i = 0; i < textTracks.length; i += 1) {\n      textTracks[i].mode = i === index ? 'showing' : 'hidden';\n    }\n  };\n\n  var fullscreen = useCallback(function () {\n    var video = videoRef.current;\n\n    if (video.requestFullscreen) {\n      video.requestFullscreen();\n    } else if (video.msRequestFullscreen) {\n      video.msRequestFullscreen();\n    } else if (video.mozRequestFullScreen) {\n      video.mozRequestFullScreen();\n    } else if (video.webkitRequestFullscreen) {\n      video.webkitRequestFullscreen();\n    } else {\n      console.warn(\"This browser doesn't support fullscreen.\");\n    }\n  }, [videoRef]);\n  var controlsElement;\n\n  if (controls) {\n    var over = controls === 'over';\n    var background = over ? theme.video.controls && theme.video.controls.background || {\n      color: 'background-back',\n      opacity: 'strong',\n      dark: true\n    } : undefined;\n    var iconColor = over && (theme.video.icons.color || 'text');\n    var formattedTime = formatTime(scrubTime || currentTime || duration);\n    var Icons = {\n      ClosedCaption: theme.video.icons.closedCaption,\n      Configure: theme.video.icons.configure,\n      FullScreen: theme.video.icons.fullScreen,\n      Pause: theme.video.icons.pause,\n      Play: theme.video.icons.play,\n      ReduceVolume: theme.video.icons.reduceVolume,\n      Volume: theme.video.icons.volume\n    };\n    var captionControls = captions.map(function (caption) {\n      return {\n        icon: caption.label ? undefined : /*#__PURE__*/React.createElement(Icons.ClosedCaption, {\n          color: iconColor\n        }),\n        label: caption.label,\n        active: caption.active,\n        onClick: function onClick() {\n          return showCaptions(caption.active ? -1 : 0);\n        }\n      };\n    });\n    controlsElement = /*#__PURE__*/React.createElement(StyledVideoControls, {\n      over: over,\n      active: !hasPlayed || controls === 'below' || over && interacting,\n      onBlur: function onBlur() {\n        if (!containsFocus(containerRef.current)) setInteracting(false);\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      direction: \"row\",\n      align: \"center\",\n      justify: \"between\",\n      background: background\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: playing ? /*#__PURE__*/React.createElement(Icons.Pause, {\n        color: iconColor,\n        a11yTitle: format({\n          id: 'video.pauseButton',\n          messages: messages\n        })\n      }) : /*#__PURE__*/React.createElement(Icons.Play, {\n        color: iconColor,\n        a11yTitle: format({\n          id: 'video.playButton',\n          messages: messages\n        })\n      }),\n      hoverIndicator: \"background\",\n      onClick: playing ? pause : play\n    }), /*#__PURE__*/React.createElement(Box, {\n      direction: \"row\",\n      align: \"center\",\n      flex: true\n    }, /*#__PURE__*/React.createElement(Box, {\n      flex: true\n    }, /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Meter, {\n      \"aria-label\": format({\n        id: 'video.progressMeter',\n        messages: messages\n      }),\n      background: over ? theme.video.scrubber && theme.video.scrubber.track && theme.video.scrubber.track.color || 'dark-3' : undefined,\n      size: \"full\",\n      thickness: \"small\",\n      values: [{\n        value: percentagePlayed || 0\n      }]\n    }), /*#__PURE__*/React.createElement(StyledVideoScrubber, {\n      \"aria-label\": format({\n        id: 'video.scrubber',\n        messages: messages\n      }),\n      ref: scrubberRef,\n      tabIndex: 0,\n      role: \"button\",\n      value: scrubTime ? Math.round(scrubTime / duration * 100) : undefined,\n      onMouseMove: scrub,\n      onMouseLeave: function onMouseLeave() {\n        return setScrubTime(undefined);\n      },\n      onClick: seek\n    }))), /*#__PURE__*/React.createElement(Box, {\n      pad: {\n        horizontal: 'small'\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      margin: \"none\"\n    }, formattedTime))), /*#__PURE__*/React.createElement(Menu, {\n      icon: /*#__PURE__*/React.createElement(Icons.Configure, {\n        color: iconColor\n      }),\n      dropAlign: {\n        bottom: 'top',\n        right: 'right'\n      },\n      dropBackground: background,\n      messages: {\n        openMenu: format({\n          id: 'video.openMenu',\n          messages: messages\n        }),\n        closeMenu: format({\n          id: 'video.closeMenu',\n          messages: messages\n        })\n      },\n      items: [{\n        icon: /*#__PURE__*/React.createElement(Icons.Volume, {\n          color: iconColor,\n          a11yTitle: format({\n            id: 'video.volumeUp',\n            messages: messages\n          })\n        }),\n        onClick: volume <= 1 - VOLUME_STEP ? louder : undefined,\n        close: false\n      }, {\n        icon: /*#__PURE__*/React.createElement(Icons.ReduceVolume, {\n          color: iconColor,\n          a11yTitle: format({\n            id: 'video.volumeDown',\n            messages: messages\n          })\n        }),\n        onClick: volume >= VOLUME_STEP ? quieter : undefined,\n        close: false\n      }].concat(captionControls, [{\n        icon: /*#__PURE__*/React.createElement(Icons.FullScreen, {\n          color: iconColor,\n          a11yTitle: format({\n            id: 'video.fullScreen',\n            messages: messages\n          })\n        }),\n        onClick: fullscreen\n      }])\n    })));\n  }\n\n  var mouseEventListeners;\n\n  if (controls === 'over') {\n    mouseEventListeners = {\n      onMouseEnter: function onMouseEnter() {\n        return setInteracting(true);\n      },\n      onMouseMove: function onMouseMove() {\n        return setInteracting(true);\n      },\n      onTouchStart: function onTouchStart() {\n        return setInteracting(true);\n      }\n    };\n  }\n\n  var style;\n\n  if (rest.fit === 'contain' && controls === 'over') {\n    // constrain the size to fit the aspect ratio so the controls\n    // overlap correctly\n    if (width) {\n      style = {\n        width: width\n      };\n    } else if (height) {\n      style = {\n        height: height\n      };\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(StyledVideoContainer, _extends({\n    ref: containerRef\n  }, mouseEventListeners, {\n    alignSelf: alignSelf,\n    gridArea: gridArea,\n    margin: margin,\n    style: style\n  }), /*#__PURE__*/React.createElement(StyledVideo, _extends({}, rest, {\n    ref: videoRef,\n    onDurationChange: function onDurationChange(event) {\n      var video = videoRef.current;\n      setDuration(video.duration);\n      setPercentagePlayed(video.currentTime / video.duration * 100);\n      if (_onDurationChange) _onDurationChange(event);\n    },\n    onEnded: function onEnded(event) {\n      setPlaying(false);\n      if (_onEnded) _onEnded(event);\n    },\n    onPause: function onPause(event) {\n      setPlaying(false);\n      if (_onPause) _onPause(event);\n    },\n    onPlay: function onPlay(event) {\n      setPlaying(true);\n      setHasPlayed(true);\n      if (_onPlay) _onPlay(event);\n    },\n    onTimeUpdate: function onTimeUpdate(event) {\n      var video = videoRef.current;\n      setCurrentTime(video.currentTime);\n      setPercentagePlayed(video.currentTime / video.duration * 100);\n      if (_onTimeUpdate) _onTimeUpdate(event);\n    },\n    onVolumeChange: function onVolumeChange(event) {\n      setVolume(videoRef.current.volume);\n      if (_onVolumeChange) _onVolumeChange(event);\n    },\n    autoPlay: autoPlay || false,\n    loop: loop || false\n  }), children), controlsElement);\n});\nVideo.defaultProps = {};\nVideo.displayName = 'Video';\nVideo.propTypes = VideoPropTypes;\nexport { Video };"]},"metadata":{},"sourceType":"module"}