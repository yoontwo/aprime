{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBC31\\uC9C0\\uC724\\\\Desktop\\\\React\\\\mbti\\\\src\\\\components\\\\Question.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button as GrommetButton, Box } from \"grommet\"; // import { animated } from \"react-spring\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = ({\n  EI,\n  NS,\n  FT,\n  PJ,\n  Finish,\n  data,\n  answers,\n  onAnswerUpdate,\n  numberOfQuestions,\n  activeQuestion,\n  onSetActiveQuestion,\n  onSetStep\n}) => {\n  const nextClickHandler = i => {\n    onAnswerUpdate(prevState => [...prevState, i]);\n\n    if (activeQuestion < numberOfQuestions) {\n      onSetActiveQuestion(activeQuestion + 1);\n    } else {\n      Finish(answers);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"start\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"logo\",\n      children: \"a prime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), data.question.split(\"n\").map(line => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"question\",\n        children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: onAnswerUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), data.choices.map((choice, i) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => nextClickHandler(i),\n        children: choice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: data.footer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/src/components/Question.js"],"names":["React","useState","useEffect","useRef","Button","GrommetButton","Box","Question","EI","NS","FT","PJ","Finish","data","answers","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetStep","nextClickHandler","i","prevState","question","split","map","line","choices","choice","footer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAM,IAAIC,aAAnB,EAAkCC,GAAlC,QAA6C,SAA7C,C,CACA;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,EADgB;AAEhBC,EAAAA,EAFgB;AAGhBC,EAAAA,EAHgB;AAIhBC,EAAAA,EAJgB;AAKhBC,EAAAA,MALgB;AAMhBC,EAAAA,IANgB;AAOhBC,EAAAA,OAPgB;AAQhBC,EAAAA,cARgB;AAShBC,EAAAA,iBATgB;AAUhBC,EAAAA,cAVgB;AAWhBC,EAAAA,mBAXgB;AAYhBC,EAAAA;AAZgB,CAAD,KAaX;AACJ,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9BN,IAAAA,cAAc,CAAEO,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeD,CAAf,CAAhB,CAAd;;AACA,QAAIJ,cAAc,GAAGD,iBAArB,EAAwC;AACtCE,MAAAA,mBAAmB,CAACD,cAAc,GAAG,CAAlB,CAAnB;AACD,KAFD,MAEO;AACLL,MAAAA,MAAM,CAACE,OAAD,CAAN;AACD;AACF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,IAAI,CAACU,QAAL,CAAcC,KAAd,CAAoB,GAApB,EAAyBC,GAAzB,CAA8BC,IAAD,IAAU;AACtC,0BACE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,mBACGA,IADH,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA,CAFH,eAWE;AAAA,gBAAIX;AAAJ;AAAA;AAAA;AAAA;AAAA,YAXF,EAYGF,IAAI,CAACc,OAAL,CAAaF,GAAb,CAAiB,CAACG,MAAD,EAASP,CAAT,kBAChB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,MAAMD,gBAAgB,CAACC,CAAD,CAA1D;AAAA,kBACGO;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,CAZH,eAoBE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,gBAA4Bf,IAAI,CAACgB;AAAjC;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA/CD;;KAAMtB,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button as GrommetButton, Box } from \"grommet\";\r\n// import { animated } from \"react-spring\";\r\n\r\nconst Question = ({\r\n  EI,\r\n  NS,\r\n  FT,\r\n  PJ,\r\n  Finish,\r\n  data,\r\n  answers,\r\n  onAnswerUpdate,\r\n  numberOfQuestions,\r\n  activeQuestion,\r\n  onSetActiveQuestion,\r\n  onSetStep,\r\n}) => {\r\n  const nextClickHandler = (i) => {\r\n    onAnswerUpdate((prevState) => [...prevState, i]);\r\n    if (activeQuestion < numberOfQuestions) {\r\n      onSetActiveQuestion(activeQuestion + 1);\r\n    } else {\r\n      Finish(answers);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"start\">\r\n      <p className=\"logo\">a prime</p>\r\n      {data.question.split(\"n\").map((line) => {\r\n        return (\r\n          <span className=\"question\">\r\n            {line}\r\n            <br />\r\n            <br />\r\n          </span>\r\n        );\r\n      })}\r\n      <p>{onAnswerUpdate}</p>\r\n      {data.choices.map((choice, i) => (\r\n        <ul>\r\n          <button className=\"button\" onClick={() => nextClickHandler(i)}>\r\n            {choice}\r\n          </button>\r\n        </ul>\r\n      ))}\r\n\r\n      <footer className=\"footer\">{data.footer}</footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}