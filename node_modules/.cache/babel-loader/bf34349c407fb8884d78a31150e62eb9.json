{"ast":null,"code":"var _excluded = [\"cellProps\", \"columns\", \"groupBy\", \"groups\", \"groupState\", \"pinnedOffset\", \"primaryProperty\", \"onMore\", \"onSelect\", \"onToggle\", \"replace\", \"rowProps\", \"selected\", \"size\", \"step\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useMemo } from 'react';\nimport { Cell } from './Cell';\nimport { ExpanderCell } from './ExpanderCell';\nimport { StyledDataTableBody, StyledDataTableRow } from './StyledDataTable';\nimport { CheckBox } from '../CheckBox/CheckBox';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { TableRow } from '../TableRow';\nimport { TableCell } from '../TableCell';\nimport { datumValue, normalizeRowCellProps } from './buildState';\nexport var GroupedBody = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var cellPropsProp = _ref.cellProps,\n      columns = _ref.columns,\n      groupBy = _ref.groupBy,\n      groups = _ref.groups,\n      groupState = _ref.groupState,\n      pinnedOffset = _ref.pinnedOffset,\n      primaryProperty = _ref.primaryProperty,\n      onMore = _ref.onMore,\n      onSelect = _ref.onSelect,\n      onToggle = _ref.onToggle,\n      replace = _ref.replace,\n      rowProps = _ref.rowProps,\n      selected = _ref.selected,\n      size = _ref.size,\n      step = _ref.step,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var items = useMemo(function () {\n    var nextItems = [];\n    groups.forEach(function (group) {\n      var expanded = groupState[group.key].expanded;\n      var memberCount = group.data.length;\n\n      if (memberCount > 1) {\n        // need a header\n        var primaryKeys = [];\n\n        if (group.data.length) {\n          group.data.forEach(function (datum) {\n            primaryKeys.push(datum[primaryProperty]);\n          });\n        }\n\n        var groupSelected = primaryKeys && selected ? primaryKeys.filter(function (val) {\n          return selected.includes(val);\n        }) : [];\n        var isGroupSelected = groupSelected.length > 0 && group.data.length > 0 && groupSelected.length === group.data.length;\n        nextItems.push({\n          expanded: expanded,\n          key: group.key,\n          datum: group.datum,\n          context: 'groupHeader',\n          isSelected: isGroupSelected,\n          indeterminate: groupSelected.length > 0 && groupSelected.length < group.data.length,\n          onChange: function onChange() {\n            if (isGroupSelected) {\n              onSelect(selected.filter(function (s) {\n                return !groupSelected.includes(s);\n              }));\n            } else onSelect([].concat(selected, primaryKeys));\n          }\n        });\n      }\n\n      if (memberCount === 1 || expanded) {\n        // add the group members\n        group.data.forEach(function (datum, index) {\n          var primaryValue = primaryProperty ? datumValue(datum, primaryProperty) : undefined;\n          var isSelected = selected && selected.includes(primaryValue);\n          nextItems.push({\n            key: datum[primaryProperty],\n            primaryValue: primaryProperty ? datumValue(datum, primaryProperty) : undefined,\n            datum: datum,\n            context: memberCount > 1 && index === memberCount - 1 ? 'groupEnd' : 'body',\n            isSelected: isSelected,\n            onChange: function onChange() {\n              if (isSelected) {\n                onSelect(selected.filter(function (s) {\n                  return s !== primaryValue;\n                }));\n              } else onSelect([].concat(selected, [primaryValue]));\n            }\n          });\n        });\n      }\n    });\n    return nextItems;\n  }, [groups, groupState, primaryProperty, selected, onSelect]);\n  return /*#__PURE__*/React.createElement(StyledDataTableBody, _extends({\n    ref: ref,\n    size: size\n  }, rest), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    items: items,\n    onMore: onMore,\n    replace: replace,\n    renderMarker: function renderMarker(marker) {\n      return /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, null, marker));\n    },\n    scrollableAncestor: \"window\",\n    step: step\n  }, function (row, index, rowRef) {\n    var context = row.context,\n        datum = row.datum,\n        expanded = row.expanded,\n        indeterminate = row.indeterminate,\n        isSelected = row.isSelected,\n        key = row.key,\n        onChange = row.onChange,\n        primaryValue = row.primaryValue;\n    var cellProps = normalizeRowCellProps(rowProps, cellPropsProp, primaryValue, index);\n    return /*#__PURE__*/React.createElement(StyledDataTableRow, {\n      ref: rowRef,\n      key: key,\n      size: size\n    }, /*#__PURE__*/React.createElement(ExpanderCell, {\n      background: cellProps.background,\n      border: cellProps.border,\n      context: context,\n      pad: cellProps.pad,\n      onToggle: context === 'groupHeader' ? onToggle(key) : undefined,\n      expanded: expanded\n    }), (selected || onSelect) && /*#__PURE__*/React.createElement(TableCell, {\n      background: cellProps.background,\n      plain: \"noPad\",\n      size: \"auto\"\n    }, /*#__PURE__*/React.createElement(CheckBox, {\n      a11yTitle: (isSelected ? 'unselect' : 'select') + \" \" + (context === 'groupHeader' ? key : primaryValue),\n      checked: isSelected,\n      indeterminate: indeterminate,\n      disabled: !onSelect,\n      onChange: onChange,\n      pad: cellProps.pad\n    })), columns.map(function (column) {\n      var scope;\n\n      if (context === 'groupHeader') {\n        scope = column.property === groupBy ? 'row' : undefined;\n      } else {\n        scope = column.primary ? 'row' : undefined;\n      }\n\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: column.property,\n        background: cellProps.background,\n        border: cellProps.border,\n        context: context,\n        column: column,\n        datum: datum,\n        pad: cellProps.pad,\n        scope: scope,\n        pinnedOffset: context === 'groupHeader' && pinnedOffset && pinnedOffset[column.property]\n      });\n    }));\n  }));\n});","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/aprime/node_modules/grommet/es6/components/DataTable/GroupedBody.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useMemo","Cell","ExpanderCell","StyledDataTableBody","StyledDataTableRow","CheckBox","InfiniteScroll","TableRow","TableCell","datumValue","normalizeRowCellProps","GroupedBody","_ref","ref","cellPropsProp","cellProps","columns","groupBy","groups","groupState","pinnedOffset","primaryProperty","onMore","onSelect","onToggle","replace","rowProps","selected","size","step","rest","items","nextItems","forEach","group","expanded","memberCount","data","primaryKeys","datum","push","groupSelected","filter","val","includes","isGroupSelected","context","isSelected","indeterminate","onChange","s","concat","index","primaryValue","undefined","createElement","renderMarker","marker","scrollableAncestor","row","rowRef","background","border","pad","plain","a11yTitle","checked","disabled","map","column","scope","property","primary"],"mappings":"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","sourcesContent":["var _excluded = [\"cellProps\", \"columns\", \"groupBy\", \"groups\", \"groupState\", \"pinnedOffset\", \"primaryProperty\", \"onMore\", \"onSelect\", \"onToggle\", \"replace\", \"rowProps\", \"selected\", \"size\", \"step\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useMemo } from 'react';\nimport { Cell } from './Cell';\nimport { ExpanderCell } from './ExpanderCell';\nimport { StyledDataTableBody, StyledDataTableRow } from './StyledDataTable';\nimport { CheckBox } from '../CheckBox/CheckBox';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { TableRow } from '../TableRow';\nimport { TableCell } from '../TableCell';\nimport { datumValue, normalizeRowCellProps } from './buildState';\nexport var GroupedBody = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var cellPropsProp = _ref.cellProps,\n      columns = _ref.columns,\n      groupBy = _ref.groupBy,\n      groups = _ref.groups,\n      groupState = _ref.groupState,\n      pinnedOffset = _ref.pinnedOffset,\n      primaryProperty = _ref.primaryProperty,\n      onMore = _ref.onMore,\n      onSelect = _ref.onSelect,\n      onToggle = _ref.onToggle,\n      replace = _ref.replace,\n      rowProps = _ref.rowProps,\n      selected = _ref.selected,\n      size = _ref.size,\n      step = _ref.step,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var items = useMemo(function () {\n    var nextItems = [];\n    groups.forEach(function (group) {\n      var expanded = groupState[group.key].expanded;\n      var memberCount = group.data.length;\n\n      if (memberCount > 1) {\n        // need a header\n        var primaryKeys = [];\n\n        if (group.data.length) {\n          group.data.forEach(function (datum) {\n            primaryKeys.push(datum[primaryProperty]);\n          });\n        }\n\n        var groupSelected = primaryKeys && selected ? primaryKeys.filter(function (val) {\n          return selected.includes(val);\n        }) : [];\n        var isGroupSelected = groupSelected.length > 0 && group.data.length > 0 && groupSelected.length === group.data.length;\n        nextItems.push({\n          expanded: expanded,\n          key: group.key,\n          datum: group.datum,\n          context: 'groupHeader',\n          isSelected: isGroupSelected,\n          indeterminate: groupSelected.length > 0 && groupSelected.length < group.data.length,\n          onChange: function onChange() {\n            if (isGroupSelected) {\n              onSelect(selected.filter(function (s) {\n                return !groupSelected.includes(s);\n              }));\n            } else onSelect([].concat(selected, primaryKeys));\n          }\n        });\n      }\n\n      if (memberCount === 1 || expanded) {\n        // add the group members\n        group.data.forEach(function (datum, index) {\n          var primaryValue = primaryProperty ? datumValue(datum, primaryProperty) : undefined;\n          var isSelected = selected && selected.includes(primaryValue);\n          nextItems.push({\n            key: datum[primaryProperty],\n            primaryValue: primaryProperty ? datumValue(datum, primaryProperty) : undefined,\n            datum: datum,\n            context: memberCount > 1 && index === memberCount - 1 ? 'groupEnd' : 'body',\n            isSelected: isSelected,\n            onChange: function onChange() {\n              if (isSelected) {\n                onSelect(selected.filter(function (s) {\n                  return s !== primaryValue;\n                }));\n              } else onSelect([].concat(selected, [primaryValue]));\n            }\n          });\n        });\n      }\n    });\n    return nextItems;\n  }, [groups, groupState, primaryProperty, selected, onSelect]);\n  return /*#__PURE__*/React.createElement(StyledDataTableBody, _extends({\n    ref: ref,\n    size: size\n  }, rest), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    items: items,\n    onMore: onMore,\n    replace: replace,\n    renderMarker: function renderMarker(marker) {\n      return /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, null, marker));\n    },\n    scrollableAncestor: \"window\",\n    step: step\n  }, function (row, index, rowRef) {\n    var context = row.context,\n        datum = row.datum,\n        expanded = row.expanded,\n        indeterminate = row.indeterminate,\n        isSelected = row.isSelected,\n        key = row.key,\n        onChange = row.onChange,\n        primaryValue = row.primaryValue;\n    var cellProps = normalizeRowCellProps(rowProps, cellPropsProp, primaryValue, index);\n    return /*#__PURE__*/React.createElement(StyledDataTableRow, {\n      ref: rowRef,\n      key: key,\n      size: size\n    }, /*#__PURE__*/React.createElement(ExpanderCell, {\n      background: cellProps.background,\n      border: cellProps.border,\n      context: context,\n      pad: cellProps.pad,\n      onToggle: context === 'groupHeader' ? onToggle(key) : undefined,\n      expanded: expanded\n    }), (selected || onSelect) && /*#__PURE__*/React.createElement(TableCell, {\n      background: cellProps.background,\n      plain: \"noPad\",\n      size: \"auto\"\n    }, /*#__PURE__*/React.createElement(CheckBox, {\n      a11yTitle: (isSelected ? 'unselect' : 'select') + \" \" + (context === 'groupHeader' ? key : primaryValue),\n      checked: isSelected,\n      indeterminate: indeterminate,\n      disabled: !onSelect,\n      onChange: onChange,\n      pad: cellProps.pad\n    })), columns.map(function (column) {\n      var scope;\n\n      if (context === 'groupHeader') {\n        scope = column.property === groupBy ? 'row' : undefined;\n      } else {\n        scope = column.primary ? 'row' : undefined;\n      }\n\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: column.property,\n        background: cellProps.background,\n        border: cellProps.border,\n        context: context,\n        column: column,\n        datum: datum,\n        pad: cellProps.pad,\n        scope: scope,\n        pinnedOffset: context === 'groupHeader' && pinnedOffset && pinnedOffset[column.property]\n      });\n    }));\n  }));\n});"]},"metadata":{},"sourceType":"module"}