{"ast":null,"code":"var _excluded = [\"background\", \"color\", \"direction\", \"size\", \"thickness\", \"type\", \"value\", \"values\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useMemo } from 'react';\nimport { Bar } from './Bar';\nimport { Circle } from './Circle';\nimport { MeterPropTypes } from './propTypes';\n\nvar deriveMax = function deriveMax(values) {\n  var max = 100;\n\n  if (values && values.length > 1) {\n    max = 0;\n    values.forEach(function (v) {\n      max += v.value;\n    });\n  }\n\n  return max;\n};\n\nvar Meter = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$background = _ref.background,\n      background = _ref$background === void 0 ? {\n    color: 'light-2',\n    opacity: 'medium'\n  } : _ref$background,\n      color = _ref.color,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? 'horizontal' : _ref$direction,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'medium' : _ref$size,\n      _ref$thickness = _ref.thickness,\n      thickness = _ref$thickness === void 0 ? 'medium' : _ref$thickness,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'bar' : _ref$type,\n      value = _ref.value,\n      valuesProp = _ref.values,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded); // normalize values to an array of objects\n\n\n  var values = useMemo(function () {\n    if (valuesProp) return valuesProp;\n    if (value) return [{\n      color: color,\n      value: value\n    }];\n    return [];\n  }, [color, value, valuesProp]);\n  var memoizedMax = useMemo(function () {\n    return deriveMax(values);\n  }, [values]);\n  var content;\n\n  if (type === 'bar') {\n    content = /*#__PURE__*/React.createElement(Bar, _extends({\n      ref: ref,\n      max: memoizedMax,\n      values: values,\n      size: size,\n      thickness: thickness,\n      background: background,\n      direction: direction\n    }, rest));\n  } else if (type === 'circle' || type === 'pie' || type === 'semicircle') {\n    content = /*#__PURE__*/React.createElement(Circle, _extends({\n      ref: ref,\n      max: memoizedMax,\n      values: values,\n      size: size,\n      thickness: thickness,\n      type: type,\n      background: background\n    }, rest));\n  }\n\n  return content;\n});\nMeter.displayName = 'Meter';\nMeter.prototype = MeterPropTypes;\nexport { Meter };","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/aprime/node_modules/grommet/es6/components/Meter/Meter.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useMemo","Bar","Circle","MeterPropTypes","deriveMax","values","max","forEach","v","value","Meter","_ref","ref","_ref$background","background","color","opacity","_ref$direction","direction","_ref$size","size","_ref$thickness","thickness","_ref$type","type","valuesProp","rest","memoizedMax","content","createElement","displayName"],"mappings":"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","sourcesContent":["var _excluded = [\"background\", \"color\", \"direction\", \"size\", \"thickness\", \"type\", \"value\", \"values\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useMemo } from 'react';\nimport { Bar } from './Bar';\nimport { Circle } from './Circle';\nimport { MeterPropTypes } from './propTypes';\n\nvar deriveMax = function deriveMax(values) {\n  var max = 100;\n\n  if (values && values.length > 1) {\n    max = 0;\n    values.forEach(function (v) {\n      max += v.value;\n    });\n  }\n\n  return max;\n};\n\nvar Meter = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$background = _ref.background,\n      background = _ref$background === void 0 ? {\n    color: 'light-2',\n    opacity: 'medium'\n  } : _ref$background,\n      color = _ref.color,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? 'horizontal' : _ref$direction,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'medium' : _ref$size,\n      _ref$thickness = _ref.thickness,\n      thickness = _ref$thickness === void 0 ? 'medium' : _ref$thickness,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'bar' : _ref$type,\n      value = _ref.value,\n      valuesProp = _ref.values,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  // normalize values to an array of objects\n  var values = useMemo(function () {\n    if (valuesProp) return valuesProp;\n    if (value) return [{\n      color: color,\n      value: value\n    }];\n    return [];\n  }, [color, value, valuesProp]);\n  var memoizedMax = useMemo(function () {\n    return deriveMax(values);\n  }, [values]);\n  var content;\n\n  if (type === 'bar') {\n    content = /*#__PURE__*/React.createElement(Bar, _extends({\n      ref: ref,\n      max: memoizedMax,\n      values: values,\n      size: size,\n      thickness: thickness,\n      background: background,\n      direction: direction\n    }, rest));\n  } else if (type === 'circle' || type === 'pie' || type === 'semicircle') {\n    content = /*#__PURE__*/React.createElement(Circle, _extends({\n      ref: ref,\n      max: memoizedMax,\n      values: values,\n      size: size,\n      thickness: thickness,\n      type: type,\n      background: background\n    }, rest));\n  }\n\n  return content;\n});\nMeter.displayName = 'Meter';\nMeter.prototype = MeterPropTypes;\nexport { Meter };"]},"metadata":{},"sourceType":"module"}