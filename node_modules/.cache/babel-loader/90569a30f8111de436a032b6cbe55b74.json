{"ast":null,"code":"import PropTypes from 'prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = {\n    a11yTitle: PropTypes.string,\n    defaultSuggestion: PropTypes.number,\n    dropAlign: PropTypes.shape({\n      top: PropTypes.oneOf(['top', 'bottom']),\n      bottom: PropTypes.oneOf(['top', 'bottom']),\n      right: PropTypes.oneOf(['left', 'right']),\n      left: PropTypes.oneOf(['left', 'right'])\n    }),\n    dropHeight: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]),\n    dropTarget: PropTypes.object,\n    dropProps: PropTypes.object,\n    icon: PropTypes.element,\n    id: PropTypes.string,\n    focusIndicator: PropTypes.bool,\n    messages: PropTypes.shape({\n      enterSelect: PropTypes.string,\n      suggestionsCount: PropTypes.string,\n      suggestionsExist: PropTypes.string,\n      suggestionIsOpen: PropTypes.string\n    }),\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    onSuggestionSelect: PropTypes.func,\n    onSuggestionsOpen: PropTypes.func,\n    onSuggestionsClose: PropTypes.func,\n    placeholder: PropTypes.node,\n    plain: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['full'])]),\n    reverse: PropTypes.bool,\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'xxlarge', '2xl', '3xl', '4xl', '5xl', '6xl']), PropTypes.string]),\n    suggestions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n      label: PropTypes.node,\n      // eslint-disable-next-line\n      value: PropTypes.any // this is intentional any\n\n    }), PropTypes.string])),\n    textAlign: PropTypes.oneOf(['start', 'center', 'end']),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  };\n}\n\nexport var TextInputPropTypes = PropType;","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/aprime/node_modules/grommet/es6/components/TextInput/propTypes.js"],"names":["PropTypes","PropType","process","env","NODE_ENV","a11yTitle","string","defaultSuggestion","number","dropAlign","shape","top","oneOf","bottom","right","left","dropHeight","oneOfType","dropTarget","object","dropProps","icon","element","id","focusIndicator","bool","messages","enterSelect","suggestionsCount","suggestionsExist","suggestionIsOpen","name","onChange","func","onSelect","onSuggestionSelect","onSuggestionsOpen","onSuggestionsClose","placeholder","node","plain","reverse","size","suggestions","arrayOf","label","value","any","textAlign","TextInputPropTypes"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = {\n    a11yTitle: PropTypes.string,\n    defaultSuggestion: PropTypes.number,\n    dropAlign: PropTypes.shape({\n      top: PropTypes.oneOf(['top', 'bottom']),\n      bottom: PropTypes.oneOf(['top', 'bottom']),\n      right: PropTypes.oneOf(['left', 'right']),\n      left: PropTypes.oneOf(['left', 'right'])\n    }),\n    dropHeight: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]),\n    dropTarget: PropTypes.object,\n    dropProps: PropTypes.object,\n    icon: PropTypes.element,\n    id: PropTypes.string,\n    focusIndicator: PropTypes.bool,\n    messages: PropTypes.shape({\n      enterSelect: PropTypes.string,\n      suggestionsCount: PropTypes.string,\n      suggestionsExist: PropTypes.string,\n      suggestionIsOpen: PropTypes.string\n    }),\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    onSuggestionSelect: PropTypes.func,\n    onSuggestionsOpen: PropTypes.func,\n    onSuggestionsClose: PropTypes.func,\n    placeholder: PropTypes.node,\n    plain: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['full'])]),\n    reverse: PropTypes.bool,\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'xxlarge', '2xl', '3xl', '4xl', '5xl', '6xl']), PropTypes.string]),\n    suggestions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n      label: PropTypes.node,\n      // eslint-disable-next-line\n      value: PropTypes.any // this is intentional any\n\n    }), PropTypes.string])),\n    textAlign: PropTypes.oneOf(['start', 'center', 'end']),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  };\n}\n\nexport var TextInputPropTypes = PropType;"]},"metadata":{},"sourceType":"module"}