{"ast":null,"code":"import PropTypes from 'prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = {\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]),\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n      dark: PropTypes.string,\n      light: PropTypes.string\n    })]),\n    message: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n      start: PropTypes.string,\n      end: PropTypes.string\n    })])\n  };\n}\n\nexport var SpinnerPropTypes = PropType;","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/aprime/node_modules/grommet/es6/components/Spinner/propTypes.js"],"names":["PropTypes","PropType","process","env","NODE_ENV","size","oneOfType","oneOf","string","color","shape","dark","light","message","start","end","SpinnerPropTypes"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,IAAIC,QAAQ,GAAG,EAAf;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,GAAG;AACTI,IAAAA,IAAI,EAAEL,SAAS,CAACM,SAAV,CAAoB,CAACN,SAAS,CAACO,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,QAAvC,CAAhB,CAAD,EAAoEP,SAAS,CAACQ,MAA9E,CAApB,CADG;AAETC,IAAAA,KAAK,EAAET,SAAS,CAACM,SAAV,CAAoB,CAACN,SAAS,CAACQ,MAAX,EAAmBR,SAAS,CAACU,KAAV,CAAgB;AAC5DC,MAAAA,IAAI,EAAEX,SAAS,CAACQ,MAD4C;AAE5DI,MAAAA,KAAK,EAAEZ,SAAS,CAACQ;AAF2C,KAAhB,CAAnB,CAApB,CAFE;AAMTK,IAAAA,OAAO,EAAEb,SAAS,CAACM,SAAV,CAAoB,CAACN,SAAS,CAACQ,MAAX,EAAmBR,SAAS,CAACU,KAAV,CAAgB;AAC9DI,MAAAA,KAAK,EAAEd,SAAS,CAACQ,MAD6C;AAE9DO,MAAAA,GAAG,EAAEf,SAAS,CAACQ;AAF+C,KAAhB,CAAnB,CAApB;AANA,GAAX;AAWD;;AAED,OAAO,IAAIQ,gBAAgB,GAAGf,QAAvB","sourcesContent":["import PropTypes from 'prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = {\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]),\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n      dark: PropTypes.string,\n      light: PropTypes.string\n    })]),\n    message: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n      start: PropTypes.string,\n      end: PropTypes.string\n    })])\n  };\n}\n\nexport var SpinnerPropTypes = PropType;"]},"metadata":{},"sourceType":"module"}