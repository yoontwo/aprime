{"ast":null,"code":"var _excluded = [\"children\", \"errors\", \"infos\", \"messages\", \"onChange\", \"onReset\", \"onSubmit\", \"onValidate\", \"validate\", \"value\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { FormContext } from './FormContext';\nimport { FormPropTypes } from './propTypes';\nvar defaultValue = {};\nvar defaultTouched = {};\nvar defaultValidationResults = {\n  errors: {},\n  infos: {}\n}; // validations is an array from Object.entries()\n\nvar validate = function validate(validations, value, omitValid) {\n  var nextErrors = {};\n  var nextInfos = {};\n  validations.forEach(function (_ref) {\n    var name = _ref[0],\n        validation = _ref[1];\n\n    if (!omitValid) {\n      nextErrors[name] = undefined;\n      nextInfos[name] = undefined;\n    }\n\n    var result = validation(value[name], value); // typeof error === 'object' is implied for both cases of error with\n    // a status message and for an error object that is a react node\n\n    if (typeof result === 'object') {\n      if (result.status === 'info') {\n        nextInfos[name] = result.message;\n      } else {\n        nextErrors[name] = result.message || result; // could be a node\n      }\n    } else if (typeof result === 'string') {\n      nextErrors[name] = result;\n    }\n  });\n  return [nextErrors, nextInfos];\n};\n\nvar Form = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var children = _ref2.children,\n      _ref2$errors = _ref2.errors,\n      errorsProp = _ref2$errors === void 0 ? defaultValidationResults.errors : _ref2$errors,\n      _ref2$infos = _ref2.infos,\n      infosProp = _ref2$infos === void 0 ? defaultValidationResults.infos : _ref2$infos,\n      messages = _ref2.messages,\n      onChange = _ref2.onChange,\n      _onReset = _ref2.onReset,\n      _onSubmit = _ref2.onSubmit,\n      onValidate = _ref2.onValidate,\n      _ref2$validate = _ref2.validate,\n      validateOn = _ref2$validate === void 0 ? 'submit' : _ref2$validate,\n      valueProp = _ref2.value,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded);\n\n  var _useContext = useContext(MessageContext),\n      format = _useContext.format;\n\n  var _useState = useState(valueProp || defaultValue),\n      valueState = _useState[0],\n      setValueState = _useState[1];\n\n  var value = useMemo(function () {\n    return valueProp || valueState;\n  }, [valueProp, valueState]);\n\n  var _useState2 = useState(defaultTouched),\n      touched = _useState2[0],\n      setTouched = _useState2[1];\n\n  var _useState3 = useState(defaultValidationResults),\n      validationResults = _useState3[0],\n      setValidationResults = _useState3[1]; // when onBlur input validation is triggered, we need to complete any\n  // potential click events before running the onBlur validation.\n  // otherwise, click events like reset, etc. may not be registered.\n  // for a detailed scenario/discussion,\n  // see: https://github.com/grommet/grommet/issues/4863\n  // the value of pendingValidation is the name of the FormField\n  // awaiting validation.\n\n\n  var _useState4 = useState(undefined),\n      pendingValidation = _useState4[0],\n      setPendingValidation = _useState4[1];\n\n  useEffect(function () {\n    setPendingValidation(undefined);\n    setValidationResults({\n      errors: errorsProp,\n      infos: infosProp\n    });\n  }, [errorsProp, infosProp]);\n  var validations = useRef({});\n  var requiredFields = useRef([]);\n  var buildValid = useCallback(function (nextErrors) {\n    var valid = false;\n    valid = requiredFields.current.filter(function (n) {\n      return Object.keys(validations.current).includes(n);\n    }).every(function (field) {\n      return value[field] && (value[field] !== '' || value[field] !== false);\n    });\n    if (Object.keys(nextErrors).length > 0) valid = false;\n    return valid;\n  }, [value]); // Remove any errors that we don't have any validations for anymore.\n\n  var filterErrorValidations = function filterErrorValidations(errors) {\n    var nextErrors = errors;\n    return Object.keys(nextErrors).filter(function (n) {\n      return !validations.current[n] || nextErrors[n] === undefined;\n    }).forEach(function (n) {\n      return delete nextErrors[n];\n    });\n  }; // Remove any infos that we don't have any validations for anymore.\n\n\n  var filterInfoValidations = function filterInfoValidations(infos) {\n    var nextInfos = infos;\n    return Object.keys(nextInfos).filter(function (n) {\n      return !validations.current[n] || nextInfos[n] === undefined;\n    }).forEach(function (n) {\n      return delete nextInfos[n];\n    });\n  }; // On initial mount, when validateOn is change or blur,\n  // set validation results for any set fields and calculate whether\n  // the form is valid overall.\n\n\n  useEffect(function () {\n    var validationsForSetFields = Object.entries(validations.current).filter(function (_ref3) {\n      var n = _ref3[0];\n      return value[n];\n    });\n\n    if (validationsForSetFields.length > 0 && validateOn !== 'submit') {\n      var _validate = validate(validationsForSetFields, value),\n          errors = _validate[0],\n          infos = _validate[1];\n\n      filterErrorValidations(errors);\n      filterInfoValidations(infos);\n      var nextValidationResults = {\n        errors: errors,\n        infos: infos,\n        valid: buildValid(errors)\n      };\n      if (onValidate) onValidate(nextValidationResults);\n      setValidationResults(nextValidationResults);\n    } // We only want to run this for the value we have on initial mount.\n    // We don't want subsequent changes to the value to re-run this.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []); // Currently, onBlur validation will trigger after a timeout of 120ms.\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (pendingValidation) {\n        // run validations on the pending one and any other touched fields\n        var _validate2 = validate(Object.entries(validations.current).filter(function (_ref4) {\n          var n = _ref4[0];\n          return touched[n] || pendingValidation.includes(n);\n        }), value),\n            validatedErrors = _validate2[0],\n            validatedInfos = _validate2[1];\n\n        setPendingValidation(undefined);\n        setValidationResults(function (prevValidationResults) {\n          // keep any previous errors and infos for untouched keys,\n          // these may have come from a submit\n          var nextErrors = _extends({}, prevValidationResults.errors, validatedErrors);\n\n          var nextInfos = _extends({}, prevValidationResults.infos, validatedInfos);\n\n          filterErrorValidations(nextErrors);\n          filterInfoValidations(nextInfos);\n          var nextValidationResults = {\n            errors: nextErrors,\n            infos: nextInfos,\n            valid: buildValid(nextErrors)\n          };\n          if (onValidate) onValidate(nextValidationResults);\n          return nextValidationResults;\n        });\n      } // a timeout is needed to ensure that a click event (like one on a reset\n      // button) completes prior to running the validation. without a timeout,\n      // the blur will always complete and trigger a validation prematurely\n      // The following values have been empirically tested, but 120 was\n      // selected because it is the largest value\n      // Chrome: 100, Safari: 120, Firefox: 80\n\n    }, 120);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [buildValid, pendingValidation, onValidate, touched, value, requiredFields]); // clear any errors when value changes\n\n  useEffect(function () {\n    if (validateOn !== 'change') setPendingValidation(undefined);\n    setValidationResults(function (prevValidationResults) {\n      var _validate3 = validate(Object.entries(validations.current).filter(function (_ref5) {\n        var n = _ref5[0];\n        return prevValidationResults.errors[n] || prevValidationResults.infos[n];\n      }), value),\n          nextErrors = _validate3[0],\n          nextInfos = _validate3[1];\n\n      return {\n        errors: _extends({}, prevValidationResults.errors, nextErrors),\n        infos: _extends({}, prevValidationResults.infos, nextInfos)\n      };\n    });\n  }, [touched, validateOn, value]); // There are three basic patterns of handling form input value state:\n  //\n  // 1 - form controlled\n  //\n  // In this model, the caller sets `value` and `onChange` properties\n  // on the Form component to supply the values used by the input fields.\n  // In useFormContext(), componentValue would be undefined and formValue\n  // is be set to whatever the form state has. Whenever the form state\n  // changes, we update the contextValue so the input component will use\n  // that. When the input component changes, we will call update() to\n  // update the form state.\n  //\n  // 2 - input controlled\n  //\n  // In this model, the caller sets `value` and `onChange` properties\n  // on the input components, like TextInput, to supply the value for it.\n  // In useFormContext(), componentValue is this value and we ensure to\n  // update the form state, via update(), and set the contextValue from\n  // the componentValue. When the input component changes, we will\n  // call update() to update the form state.\n  //\n  // 3 - uncontrolled\n  //\n  // In this model, the caller doesn't set a `value` or `onChange` property\n  // at either the form or input component levels.\n  // In useFormContext(), componentValue is undefined and valueProp is\n  // undefined and nothing much happens here. That is, unless the\n  // calling component needs to know the state in order to work, such\n  // as CheckBox or Select. In this case, those components supply\n  // an initialValue, which will trigger updating the contextValue so\n  // they can have access to it.\n  //\n\n  var useFormInput = function useFormInput(name, componentValue, initialValue) {\n    var _useState5 = useState(initialValue),\n        inputValue = _useState5[0],\n        setInputValue = _useState5[1];\n\n    var formValue = name ? value[name] : undefined; // for dynamic forms, we need to track when an input has been added to\n    // the form value. if the input is unmounted, we will delete its key/value\n    // from the form value.\n\n    var keyCreated = useRef(false); // This effect is for pattern #2, where the controlled input\n    // component is driving the value via componentValue.\n\n    useEffect(function () {\n      if (name && // we have somewhere to put this\n      componentValue !== undefined && // input driving\n      componentValue !== formValue // don't already have it\n      ) {\n        setValueState(function (prevValue) {\n          var nextValue = _extends({}, prevValue);\n\n          nextValue[name] = componentValue;\n          return nextValue;\n        }); // don't onChange on programmatic changes\n      }\n    }, [componentValue, formValue, name]); // on unmount, if the form is uncontrolled, remove the key/value\n    // from the form value\n\n    useEffect(function () {\n      return function () {\n        if (keyCreated.current) {\n          keyCreated.current = false;\n          setValueState(function (prevValue) {\n            var nextValue = _extends({}, prevValue);\n\n            delete nextValue[name];\n            return nextValue;\n          });\n        }\n      };\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [] // only run onmount and unmount\n    );\n    var useValue;\n    if (componentValue !== undefined) // input component drives, pattern #2\n      useValue = componentValue;else if (valueProp && name && formValue !== undefined) // form drives, pattern #1\n      useValue = formValue;else if (formValue === undefined && name) // form has reset, so reset input value as well\n      useValue = initialValue;else useValue = inputValue;\n    return [useValue, function (nextComponentValue) {\n      if (name) {\n        // we have somewhere to put this\n        var nextTouched = _extends({}, touched);\n\n        nextTouched[name] = true;\n\n        if (!touched[name]) {\n          // don't update if not needed\n          setTouched(nextTouched);\n        }\n\n        var nextValue = _extends({}, value); // if nextValue doesn't have a key for name, this must be\n        // uncontrolled form. we will flag this field was added so\n        // we know to remove its value from the form if it is dynamically\n        // removed\n\n\n        if (!(name in nextValue)) keyCreated.current = true;\n        nextValue[name] = nextComponentValue;\n        setValueState(nextValue);\n        if (onChange) onChange(nextValue, {\n          touched: nextTouched\n        });\n      }\n\n      if (initialValue !== undefined) setInputValue(nextComponentValue);\n    }];\n  };\n\n  var useFormField = function useFormField(_ref6) {\n    var errorArg = _ref6.error,\n        infoArg = _ref6.info,\n        name = _ref6.name,\n        required = _ref6.required,\n        disabled = _ref6.disabled,\n        validateArg = _ref6.validate;\n    var error = disabled ? undefined : errorArg || validationResults.errors[name];\n    var info = infoArg || validationResults.infos[name];\n    useEffect(function () {\n      var validateSingle = function validateSingle(aValidate, value2, data) {\n        var result;\n\n        if (typeof aValidate === 'function') {\n          result = aValidate(value2, data);\n        } else if (aValidate.regexp) {\n          if (!aValidate.regexp.test(value2)) {\n            result = aValidate.message || format({\n              id: 'form.invalid',\n              messages: messages\n            });\n\n            if (aValidate.status) {\n              result = {\n                message: result,\n                status: aValidate.status\n              };\n            }\n          }\n        }\n\n        return result;\n      };\n\n      var validateField = function validateField(value2, data) {\n        var result;\n\n        if (required && (value2 === undefined || value2 === '' || value2 === false || Array.isArray(value2) && !value2.length)) {\n          result = format({\n            id: 'form.required',\n            messages: messages\n          });\n        } else if (validateArg) {\n          if (Array.isArray(validateArg)) {\n            validateArg.some(function (aValidate) {\n              result = validateSingle(aValidate, value2, data);\n              return !!result;\n            });\n          } else {\n            result = validateSingle(validateArg, value2, data);\n          }\n        }\n\n        return result;\n      };\n\n      var index = requiredFields.current.indexOf(name);\n\n      if (required) {\n        if (index === -1) requiredFields.current.push(name);\n      } else if (index !== -1) requiredFields.current.splice(index, 1);\n\n      if (validateArg || required) {\n        if (disabled) {\n          return undefined;\n        }\n\n        validations.current[name] = validateField;\n        return function () {\n          return delete validations.current[name];\n        };\n      }\n\n      return undefined;\n    }, [error, name, required, validateArg, disabled]);\n    return {\n      error: error,\n      info: info,\n      inForm: true,\n      onBlur: validateOn === 'blur' ? function () {\n        return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);\n      } : undefined,\n      onChange: validateOn === 'change' ? function () {\n        return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);\n      } : undefined\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: ref\n  }, rest, {\n    onReset: function onReset(event) {\n      setPendingValidation(undefined);\n\n      if (!valueProp) {\n        setValueState(defaultValue);\n        if (onChange) onChange(defaultValue, {\n          touched: defaultTouched\n        });\n      }\n\n      setTouched(defaultTouched);\n      setValidationResults(defaultValidationResults);\n\n      if (_onReset) {\n        event.persist(); // extract from React's synthetic event pool\n\n        var adjustedEvent = event;\n        adjustedEvent.value = defaultValue;\n\n        _onReset(adjustedEvent);\n      }\n    },\n    onSubmit: function onSubmit(event) {\n      // Don't submit the form via browser form action. We don't want it\n      // if the validation fails. And, we assume a javascript action handler\n      // otherwise.\n      event.preventDefault();\n      setPendingValidation(undefined);\n\n      var _validate4 = validate(Object.entries(validations.current), value, true),\n          nextErrors = _validate4[0],\n          nextInfos = _validate4[1];\n\n      setValidationResults(function () {\n        var nextValidationResults = {\n          errors: nextErrors,\n          infos: nextInfos,\n          // Show form's validity when clicking on Submit\n          valid: buildValid(nextErrors)\n        };\n        if (onValidate) onValidate(nextValidationResults);\n        return nextValidationResults;\n      });\n\n      if (Object.keys(nextErrors).length === 0 && _onSubmit) {\n        event.persist(); // extract from React's synthetic event pool\n\n        var adjustedEvent = event;\n        adjustedEvent.value = value;\n        adjustedEvent.touched = touched;\n\n        _onSubmit(adjustedEvent);\n      }\n    }\n  }), /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: {\n      useFormField: useFormField,\n      useFormInput: useFormInput\n    }\n  }, children));\n});\nForm.displayName = 'Form';\nForm.propTypes = FormPropTypes;\nexport { Form };","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/node_modules/grommet/es6/components/Form/Form.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useCallback","useContext","useEffect","useMemo","useRef","useState","MessageContext","FormContext","FormPropTypes","defaultValue","defaultTouched","defaultValidationResults","errors","infos","validate","validations","value","omitValid","nextErrors","nextInfos","forEach","_ref","name","validation","undefined","result","status","message","Form","_ref2","ref","children","_ref2$errors","errorsProp","_ref2$infos","infosProp","messages","onChange","_onReset","onReset","_onSubmit","onSubmit","onValidate","_ref2$validate","validateOn","valueProp","rest","_useContext","format","_useState","valueState","setValueState","_useState2","touched","setTouched","_useState3","validationResults","setValidationResults","_useState4","pendingValidation","setPendingValidation","requiredFields","buildValid","valid","current","filter","n","includes","every","field","filterErrorValidations","filterInfoValidations","validationsForSetFields","entries","_ref3","_validate","nextValidationResults","timer","setTimeout","_validate2","_ref4","validatedErrors","validatedInfos","prevValidationResults","clearTimeout","_validate3","_ref5","useFormInput","componentValue","initialValue","_useState5","inputValue","setInputValue","formValue","keyCreated","prevValue","nextValue","useValue","nextComponentValue","nextTouched","useFormField","_ref6","errorArg","error","infoArg","info","required","disabled","validateArg","validateSingle","aValidate","value2","data","regexp","test","id","validateField","Array","isArray","some","index","push","splice","inForm","onBlur","concat","createElement","event","persist","adjustedEvent","preventDefault","_validate4","Provider","displayName","propTypes"],"mappings":"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","sourcesContent":["var _excluded = [\"children\", \"errors\", \"infos\", \"messages\", \"onChange\", \"onReset\", \"onSubmit\", \"onValidate\", \"validate\", \"value\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { FormContext } from './FormContext';\nimport { FormPropTypes } from './propTypes';\nvar defaultValue = {};\nvar defaultTouched = {};\nvar defaultValidationResults = {\n  errors: {},\n  infos: {}\n}; // validations is an array from Object.entries()\n\nvar validate = function validate(validations, value, omitValid) {\n  var nextErrors = {};\n  var nextInfos = {};\n  validations.forEach(function (_ref) {\n    var name = _ref[0],\n        validation = _ref[1];\n\n    if (!omitValid) {\n      nextErrors[name] = undefined;\n      nextInfos[name] = undefined;\n    }\n\n    var result = validation(value[name], value); // typeof error === 'object' is implied for both cases of error with\n    // a status message and for an error object that is a react node\n\n    if (typeof result === 'object') {\n      if (result.status === 'info') {\n        nextInfos[name] = result.message;\n      } else {\n        nextErrors[name] = result.message || result; // could be a node\n      }\n    } else if (typeof result === 'string') {\n      nextErrors[name] = result;\n    }\n  });\n  return [nextErrors, nextInfos];\n};\n\nvar Form = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var children = _ref2.children,\n      _ref2$errors = _ref2.errors,\n      errorsProp = _ref2$errors === void 0 ? defaultValidationResults.errors : _ref2$errors,\n      _ref2$infos = _ref2.infos,\n      infosProp = _ref2$infos === void 0 ? defaultValidationResults.infos : _ref2$infos,\n      messages = _ref2.messages,\n      onChange = _ref2.onChange,\n      _onReset = _ref2.onReset,\n      _onSubmit = _ref2.onSubmit,\n      onValidate = _ref2.onValidate,\n      _ref2$validate = _ref2.validate,\n      validateOn = _ref2$validate === void 0 ? 'submit' : _ref2$validate,\n      valueProp = _ref2.value,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded);\n\n  var _useContext = useContext(MessageContext),\n      format = _useContext.format;\n\n  var _useState = useState(valueProp || defaultValue),\n      valueState = _useState[0],\n      setValueState = _useState[1];\n\n  var value = useMemo(function () {\n    return valueProp || valueState;\n  }, [valueProp, valueState]);\n\n  var _useState2 = useState(defaultTouched),\n      touched = _useState2[0],\n      setTouched = _useState2[1];\n\n  var _useState3 = useState(defaultValidationResults),\n      validationResults = _useState3[0],\n      setValidationResults = _useState3[1]; // when onBlur input validation is triggered, we need to complete any\n  // potential click events before running the onBlur validation.\n  // otherwise, click events like reset, etc. may not be registered.\n  // for a detailed scenario/discussion,\n  // see: https://github.com/grommet/grommet/issues/4863\n  // the value of pendingValidation is the name of the FormField\n  // awaiting validation.\n\n\n  var _useState4 = useState(undefined),\n      pendingValidation = _useState4[0],\n      setPendingValidation = _useState4[1];\n\n  useEffect(function () {\n    setPendingValidation(undefined);\n    setValidationResults({\n      errors: errorsProp,\n      infos: infosProp\n    });\n  }, [errorsProp, infosProp]);\n  var validations = useRef({});\n  var requiredFields = useRef([]);\n  var buildValid = useCallback(function (nextErrors) {\n    var valid = false;\n    valid = requiredFields.current.filter(function (n) {\n      return Object.keys(validations.current).includes(n);\n    }).every(function (field) {\n      return value[field] && (value[field] !== '' || value[field] !== false);\n    });\n    if (Object.keys(nextErrors).length > 0) valid = false;\n    return valid;\n  }, [value]); // Remove any errors that we don't have any validations for anymore.\n\n  var filterErrorValidations = function filterErrorValidations(errors) {\n    var nextErrors = errors;\n    return Object.keys(nextErrors).filter(function (n) {\n      return !validations.current[n] || nextErrors[n] === undefined;\n    }).forEach(function (n) {\n      return delete nextErrors[n];\n    });\n  }; // Remove any infos that we don't have any validations for anymore.\n\n\n  var filterInfoValidations = function filterInfoValidations(infos) {\n    var nextInfos = infos;\n    return Object.keys(nextInfos).filter(function (n) {\n      return !validations.current[n] || nextInfos[n] === undefined;\n    }).forEach(function (n) {\n      return delete nextInfos[n];\n    });\n  }; // On initial mount, when validateOn is change or blur,\n  // set validation results for any set fields and calculate whether\n  // the form is valid overall.\n\n\n  useEffect(function () {\n    var validationsForSetFields = Object.entries(validations.current).filter(function (_ref3) {\n      var n = _ref3[0];\n      return value[n];\n    });\n\n    if (validationsForSetFields.length > 0 && validateOn !== 'submit') {\n      var _validate = validate(validationsForSetFields, value),\n          errors = _validate[0],\n          infos = _validate[1];\n\n      filterErrorValidations(errors);\n      filterInfoValidations(infos);\n      var nextValidationResults = {\n        errors: errors,\n        infos: infos,\n        valid: buildValid(errors)\n      };\n      if (onValidate) onValidate(nextValidationResults);\n      setValidationResults(nextValidationResults);\n    } // We only want to run this for the value we have on initial mount.\n    // We don't want subsequent changes to the value to re-run this.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []); // Currently, onBlur validation will trigger after a timeout of 120ms.\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (pendingValidation) {\n        // run validations on the pending one and any other touched fields\n        var _validate2 = validate(Object.entries(validations.current).filter(function (_ref4) {\n          var n = _ref4[0];\n          return touched[n] || pendingValidation.includes(n);\n        }), value),\n            validatedErrors = _validate2[0],\n            validatedInfos = _validate2[1];\n\n        setPendingValidation(undefined);\n        setValidationResults(function (prevValidationResults) {\n          // keep any previous errors and infos for untouched keys,\n          // these may have come from a submit\n          var nextErrors = _extends({}, prevValidationResults.errors, validatedErrors);\n\n          var nextInfos = _extends({}, prevValidationResults.infos, validatedInfos);\n\n          filterErrorValidations(nextErrors);\n          filterInfoValidations(nextInfos);\n          var nextValidationResults = {\n            errors: nextErrors,\n            infos: nextInfos,\n            valid: buildValid(nextErrors)\n          };\n          if (onValidate) onValidate(nextValidationResults);\n          return nextValidationResults;\n        });\n      } // a timeout is needed to ensure that a click event (like one on a reset\n      // button) completes prior to running the validation. without a timeout,\n      // the blur will always complete and trigger a validation prematurely\n      // The following values have been empirically tested, but 120 was\n      // selected because it is the largest value\n      // Chrome: 100, Safari: 120, Firefox: 80\n\n    }, 120);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [buildValid, pendingValidation, onValidate, touched, value, requiredFields]); // clear any errors when value changes\n\n  useEffect(function () {\n    if (validateOn !== 'change') setPendingValidation(undefined);\n    setValidationResults(function (prevValidationResults) {\n      var _validate3 = validate(Object.entries(validations.current).filter(function (_ref5) {\n        var n = _ref5[0];\n        return prevValidationResults.errors[n] || prevValidationResults.infos[n];\n      }), value),\n          nextErrors = _validate3[0],\n          nextInfos = _validate3[1];\n\n      return {\n        errors: _extends({}, prevValidationResults.errors, nextErrors),\n        infos: _extends({}, prevValidationResults.infos, nextInfos)\n      };\n    });\n  }, [touched, validateOn, value]); // There are three basic patterns of handling form input value state:\n  //\n  // 1 - form controlled\n  //\n  // In this model, the caller sets `value` and `onChange` properties\n  // on the Form component to supply the values used by the input fields.\n  // In useFormContext(), componentValue would be undefined and formValue\n  // is be set to whatever the form state has. Whenever the form state\n  // changes, we update the contextValue so the input component will use\n  // that. When the input component changes, we will call update() to\n  // update the form state.\n  //\n  // 2 - input controlled\n  //\n  // In this model, the caller sets `value` and `onChange` properties\n  // on the input components, like TextInput, to supply the value for it.\n  // In useFormContext(), componentValue is this value and we ensure to\n  // update the form state, via update(), and set the contextValue from\n  // the componentValue. When the input component changes, we will\n  // call update() to update the form state.\n  //\n  // 3 - uncontrolled\n  //\n  // In this model, the caller doesn't set a `value` or `onChange` property\n  // at either the form or input component levels.\n  // In useFormContext(), componentValue is undefined and valueProp is\n  // undefined and nothing much happens here. That is, unless the\n  // calling component needs to know the state in order to work, such\n  // as CheckBox or Select. In this case, those components supply\n  // an initialValue, which will trigger updating the contextValue so\n  // they can have access to it.\n  //\n\n  var useFormInput = function useFormInput(name, componentValue, initialValue) {\n    var _useState5 = useState(initialValue),\n        inputValue = _useState5[0],\n        setInputValue = _useState5[1];\n\n    var formValue = name ? value[name] : undefined; // for dynamic forms, we need to track when an input has been added to\n    // the form value. if the input is unmounted, we will delete its key/value\n    // from the form value.\n\n    var keyCreated = useRef(false); // This effect is for pattern #2, where the controlled input\n    // component is driving the value via componentValue.\n\n    useEffect(function () {\n      if (name && // we have somewhere to put this\n      componentValue !== undefined && // input driving\n      componentValue !== formValue // don't already have it\n      ) {\n        setValueState(function (prevValue) {\n          var nextValue = _extends({}, prevValue);\n\n          nextValue[name] = componentValue;\n          return nextValue;\n        }); // don't onChange on programmatic changes\n      }\n    }, [componentValue, formValue, name]); // on unmount, if the form is uncontrolled, remove the key/value\n    // from the form value\n\n    useEffect(function () {\n      return function () {\n        if (keyCreated.current) {\n          keyCreated.current = false;\n          setValueState(function (prevValue) {\n            var nextValue = _extends({}, prevValue);\n\n            delete nextValue[name];\n            return nextValue;\n          });\n        }\n      };\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [] // only run onmount and unmount\n    );\n    var useValue;\n    if (componentValue !== undefined) // input component drives, pattern #2\n      useValue = componentValue;else if (valueProp && name && formValue !== undefined) // form drives, pattern #1\n      useValue = formValue;else if (formValue === undefined && name) // form has reset, so reset input value as well\n      useValue = initialValue;else useValue = inputValue;\n    return [useValue, function (nextComponentValue) {\n      if (name) {\n        // we have somewhere to put this\n        var nextTouched = _extends({}, touched);\n\n        nextTouched[name] = true;\n\n        if (!touched[name]) {\n          // don't update if not needed\n          setTouched(nextTouched);\n        }\n\n        var nextValue = _extends({}, value); // if nextValue doesn't have a key for name, this must be\n        // uncontrolled form. we will flag this field was added so\n        // we know to remove its value from the form if it is dynamically\n        // removed\n\n\n        if (!(name in nextValue)) keyCreated.current = true;\n        nextValue[name] = nextComponentValue;\n        setValueState(nextValue);\n        if (onChange) onChange(nextValue, {\n          touched: nextTouched\n        });\n      }\n\n      if (initialValue !== undefined) setInputValue(nextComponentValue);\n    }];\n  };\n\n  var useFormField = function useFormField(_ref6) {\n    var errorArg = _ref6.error,\n        infoArg = _ref6.info,\n        name = _ref6.name,\n        required = _ref6.required,\n        disabled = _ref6.disabled,\n        validateArg = _ref6.validate;\n    var error = disabled ? undefined : errorArg || validationResults.errors[name];\n    var info = infoArg || validationResults.infos[name];\n    useEffect(function () {\n      var validateSingle = function validateSingle(aValidate, value2, data) {\n        var result;\n\n        if (typeof aValidate === 'function') {\n          result = aValidate(value2, data);\n        } else if (aValidate.regexp) {\n          if (!aValidate.regexp.test(value2)) {\n            result = aValidate.message || format({\n              id: 'form.invalid',\n              messages: messages\n            });\n\n            if (aValidate.status) {\n              result = {\n                message: result,\n                status: aValidate.status\n              };\n            }\n          }\n        }\n\n        return result;\n      };\n\n      var validateField = function validateField(value2, data) {\n        var result;\n\n        if (required && (value2 === undefined || value2 === '' || value2 === false || Array.isArray(value2) && !value2.length)) {\n          result = format({\n            id: 'form.required',\n            messages: messages\n          });\n        } else if (validateArg) {\n          if (Array.isArray(validateArg)) {\n            validateArg.some(function (aValidate) {\n              result = validateSingle(aValidate, value2, data);\n              return !!result;\n            });\n          } else {\n            result = validateSingle(validateArg, value2, data);\n          }\n        }\n\n        return result;\n      };\n\n      var index = requiredFields.current.indexOf(name);\n\n      if (required) {\n        if (index === -1) requiredFields.current.push(name);\n      } else if (index !== -1) requiredFields.current.splice(index, 1);\n\n      if (validateArg || required) {\n        if (disabled) {\n          return undefined;\n        }\n\n        validations.current[name] = validateField;\n        return function () {\n          return delete validations.current[name];\n        };\n      }\n\n      return undefined;\n    }, [error, name, required, validateArg, disabled]);\n    return {\n      error: error,\n      info: info,\n      inForm: true,\n      onBlur: validateOn === 'blur' ? function () {\n        return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);\n      } : undefined,\n      onChange: validateOn === 'change' ? function () {\n        return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);\n      } : undefined\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: ref\n  }, rest, {\n    onReset: function onReset(event) {\n      setPendingValidation(undefined);\n\n      if (!valueProp) {\n        setValueState(defaultValue);\n        if (onChange) onChange(defaultValue, {\n          touched: defaultTouched\n        });\n      }\n\n      setTouched(defaultTouched);\n      setValidationResults(defaultValidationResults);\n\n      if (_onReset) {\n        event.persist(); // extract from React's synthetic event pool\n\n        var adjustedEvent = event;\n        adjustedEvent.value = defaultValue;\n\n        _onReset(adjustedEvent);\n      }\n    },\n    onSubmit: function onSubmit(event) {\n      // Don't submit the form via browser form action. We don't want it\n      // if the validation fails. And, we assume a javascript action handler\n      // otherwise.\n      event.preventDefault();\n      setPendingValidation(undefined);\n\n      var _validate4 = validate(Object.entries(validations.current), value, true),\n          nextErrors = _validate4[0],\n          nextInfos = _validate4[1];\n\n      setValidationResults(function () {\n        var nextValidationResults = {\n          errors: nextErrors,\n          infos: nextInfos,\n          // Show form's validity when clicking on Submit\n          valid: buildValid(nextErrors)\n        };\n        if (onValidate) onValidate(nextValidationResults);\n        return nextValidationResults;\n      });\n\n      if (Object.keys(nextErrors).length === 0 && _onSubmit) {\n        event.persist(); // extract from React's synthetic event pool\n\n        var adjustedEvent = event;\n        adjustedEvent.value = value;\n        adjustedEvent.touched = touched;\n\n        _onSubmit(adjustedEvent);\n      }\n    }\n  }), /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: {\n      useFormField: useFormField,\n      useFormInput: useFormInput\n    }\n  }, children));\n});\nForm.displayName = 'Form';\nForm.propTypes = FormPropTypes;\nexport { Form };"]},"metadata":{},"sourceType":"module"}