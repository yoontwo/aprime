{"ast":null,"code":"import PropTypes from 'prop-types';\nimport { colorPropType } from '../../utils/general-prop-types';\nvar animationPropType = PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['pulse', 'draw']), PropTypes.shape({\n  type: PropTypes.oneOf(['pulse', 'draw']),\n  delay: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  duration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  size: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge'])\n})]);\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = {\n    animation: animationPropType,\n    connections: PropTypes.arrayOf(PropTypes.shape({\n      anchor: PropTypes.oneOf(['center', 'vertical', 'horizontal']),\n      animation: animationPropType,\n      color: colorPropType,\n      fromTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      label: PropTypes.string,\n      // for accessibility\n      offset: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large']), PropTypes.string]),\n      thickness: PropTypes.oneOfType([PropTypes.oneOf(['hair', 'xxsmall', 'xsmall', 'small', 'medium', 'large']), PropTypes.string]),\n      toTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      type: PropTypes.oneOf(['direct', 'curved', 'rectilinear'])\n    })).isRequired\n  };\n}\n\nexport var DiagramPropTypes = PropType;","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/node_modules/grommet/es6/components/Diagram/propTypes.js"],"names":["PropTypes","colorPropType","animationPropType","oneOfType","bool","oneOf","shape","type","delay","number","string","duration","size","PropType","process","env","NODE_ENV","animation","connections","arrayOf","anchor","color","fromTarget","object","isRequired","label","offset","thickness","toTarget","DiagramPropTypes"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,IAAIC,iBAAiB,GAAGF,SAAS,CAACG,SAAV,CAAoB,CAACH,SAAS,CAACI,IAAX,EAAiBJ,SAAS,CAACK,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,CAAjB,EAAqDL,SAAS,CAACM,KAAV,CAAgB;AAC/GC,EAAAA,IAAI,EAAEP,SAAS,CAACK,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,CADyG;AAE/GG,EAAAA,KAAK,EAAER,SAAS,CAACG,SAAV,CAAoB,CAACH,SAAS,CAACS,MAAX,EAAmBT,SAAS,CAACU,MAA7B,CAApB,CAFwG;AAG/GC,EAAAA,QAAQ,EAAEX,SAAS,CAACG,SAAV,CAAoB,CAACH,SAAS,CAACS,MAAX,EAAmBT,SAAS,CAACU,MAA7B,CAApB,CAHqG;AAI/GE,EAAAA,IAAI,EAAEZ,SAAS,CAACK,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,QAAvC,CAAhB;AAJyG,CAAhB,CAArD,CAApB,CAAxB;AAMA,IAAIQ,QAAQ,GAAG,EAAf;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,GAAG;AACTI,IAAAA,SAAS,EAAEf,iBADF;AAETgB,IAAAA,WAAW,EAAElB,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACM,KAAV,CAAgB;AAC7Cc,MAAAA,MAAM,EAAEpB,SAAS,CAACK,KAAV,CAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,YAAvB,CAAhB,CADqC;AAE7CY,MAAAA,SAAS,EAAEf,iBAFkC;AAG7CmB,MAAAA,KAAK,EAAEpB,aAHsC;AAI7CqB,MAAAA,UAAU,EAAEtB,SAAS,CAACG,SAAV,CAAoB,CAACH,SAAS,CAACU,MAAX,EAAmBV,SAAS,CAACuB,MAA7B,CAApB,EAA0DC,UAJzB;AAK7CC,MAAAA,KAAK,EAAEzB,SAAS,CAACU,MAL4B;AAM7C;AACAgB,MAAAA,MAAM,EAAE1B,SAAS,CAACG,SAAV,CAAoB,CAACH,SAAS,CAACK,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,EAA8B,OAA9B,CAAhB,CAAD,EAA0DL,SAAS,CAACU,MAApE,CAApB,CAPqC;AAQ7CiB,MAAAA,SAAS,EAAE3B,SAAS,CAACG,SAAV,CAAoB,CAACH,SAAS,CAACK,KAAV,CAAgB,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,QAAvC,EAAiD,OAAjD,CAAhB,CAAD,EAA6EL,SAAS,CAACU,MAAvF,CAApB,CARkC;AAS7CkB,MAAAA,QAAQ,EAAE5B,SAAS,CAACG,SAAV,CAAoB,CAACH,SAAS,CAACU,MAAX,EAAmBV,SAAS,CAACuB,MAA7B,CAApB,EAA0DC,UATvB;AAU7CjB,MAAAA,IAAI,EAAEP,SAAS,CAACK,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,aAArB,CAAhB;AAVuC,KAAhB,CAAlB,EAWTmB;AAbK,GAAX;AAeD;;AAED,OAAO,IAAIK,gBAAgB,GAAGhB,QAAvB","sourcesContent":["import PropTypes from 'prop-types';\nimport { colorPropType } from '../../utils/general-prop-types';\nvar animationPropType = PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['pulse', 'draw']), PropTypes.shape({\n  type: PropTypes.oneOf(['pulse', 'draw']),\n  delay: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  duration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  size: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge'])\n})]);\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = {\n    animation: animationPropType,\n    connections: PropTypes.arrayOf(PropTypes.shape({\n      anchor: PropTypes.oneOf(['center', 'vertical', 'horizontal']),\n      animation: animationPropType,\n      color: colorPropType,\n      fromTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      label: PropTypes.string,\n      // for accessibility\n      offset: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large']), PropTypes.string]),\n      thickness: PropTypes.oneOfType([PropTypes.oneOf(['hair', 'xxsmall', 'xsmall', 'small', 'medium', 'large']), PropTypes.string]),\n      toTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      type: PropTypes.oneOf(['direct', 'curved', 'rectilinear'])\n    })).isRequired\n  };\n}\n\nexport var DiagramPropTypes = PropType;"]},"metadata":{},"sourceType":"module"}