{"ast":null,"code":"var _excluded = [\"children\", \"full\", \"containerTarget\", \"theme\", \"options\", \"messages\"];\n\nvar _templateObject;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\nimport React, { forwardRef, useEffect, useMemo, useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { ContainerTargetContext, ResponsiveContext, ThemeContext } from '../../contexts';\nimport { deepMerge, backgroundIsDark, getBreakpoint, getDeviceBreakpoint, normalizeColor, useForwardedRef } from '../../utils';\nimport { base as baseTheme } from '../../themes';\nimport { StyledGrommet } from './StyledGrommet';\nimport { RootsContext } from '../../contexts/RootsContext';\nimport { OptionsContext } from '../../contexts/OptionsContext';\nimport { format as _format, MessageContext } from '../../contexts/MessageContext';\nimport defaultMessages from '../../languages/default.json';\nimport { GrommetPropTypes } from './propTypes';\nvar FullGlobalStyle = createGlobalStyle(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  body { margin: 0; }\\n\"])));\n\nvar deviceResponsive = function deviceResponsive(userAgent, theme) {\n  // log('--deviceResponsive', userAgent, theme);\n\n  /*\n   * Regexes provided for mobile and tablet detection are meant to replace\n   * a full-featured specific library due to contributing a considerable size\n   * into the bundle.\n   *\n   * User agents found https://deviceatlas.com/blog/list-of-user-agent-strings\n   */\n  if (userAgent) {\n    if (/(tablet|ipad|playbook|silk)|(android(?!.*mobile))/i.test(userAgent)) {\n      return getDeviceBreakpoint('tablet', theme);\n    }\n\n    if (/Mobile|iPhone|Android/.test(userAgent)) {\n      return getDeviceBreakpoint('phone', theme);\n    }\n\n    return getDeviceBreakpoint('computer', theme);\n  }\n\n  return undefined;\n};\n\nvar defaultOptions = {};\nvar Grommet = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n      full = props.full,\n      _props$containerTarge = props.containerTarget,\n      containerTarget = _props$containerTarge === void 0 ? typeof document === 'object' ? document.body : undefined : _props$containerTarge,\n      themeProp = props.theme,\n      _props$options = props.options,\n      options = _props$options === void 0 ? defaultOptions : _props$options,\n      messagesProp = props.messages,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var background = props.background,\n      dir = props.dir,\n      themeMode = props.themeMode,\n      userAgent = props.userAgent;\n\n  var _useState = useState(),\n      stateResponsive = _useState[0],\n      setResponsive = _useState[1];\n\n  var theme = useMemo(function () {\n    var nextTheme = deepMerge(baseTheme, themeProp || {}); // if user provides specific menu alignment, we don't want\n    // the defaults to be included at all (can cause issues with controlMirror)\n    // override merged value with themeProp value\n\n    if (themeProp && themeProp.menu && themeProp.menu.drop && themeProp.menu.drop.align) {\n      delete nextTheme.menu.drop.align;\n      nextTheme.menu.drop.align = themeProp.menu.drop.align;\n    }\n\n    var themeBackground = nextTheme.global.colors.background;\n    nextTheme.dark = (themeMode || nextTheme.defaultMode) === 'dark';\n    var color = normalizeColor(background || themeBackground, nextTheme);\n    nextTheme.dark = backgroundIsDark(color, nextTheme);\n    nextTheme.baseBackground = background || themeBackground; // This allows DataTable to intelligently set the background of a pinned\n    // header or footer.\n\n    nextTheme.background = nextTheme.baseBackground;\n\n    if (dir) {\n      nextTheme.dir = dir;\n    }\n\n    return nextTheme;\n  }, [background, dir, themeMode, themeProp]);\n  var messages = useMemo(function () {\n    // combine the passed in messages, if any, with the default\n    // messages and format function.\n    var nextMessages = deepMerge(defaultMessages, (messagesProp == null ? void 0 : messagesProp.messages) || {});\n    return {\n      messages: nextMessages,\n      format: function format(opts) {\n        var message = (messagesProp == null ? void 0 : messagesProp.format) && messagesProp.format(opts);\n        return typeof message !== 'undefined' ? message : _format(opts, nextMessages);\n      }\n    };\n  }, [messagesProp]);\n  useEffect(function () {\n    var onResize = function onResize() {\n      setResponsive(getBreakpoint(document.body.clientWidth, theme));\n    };\n\n    window.addEventListener('resize', onResize);\n    onResize();\n    return function () {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [theme]);\n  var responsive = stateResponsive || deviceResponsive(userAgent, theme) || theme.global.deviceBreakpoints.tablet;\n  var grommetRef = useForwardedRef(ref);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, /*#__PURE__*/React.createElement(ResponsiveContext.Provider, {\n    value: responsive\n  }, /*#__PURE__*/React.createElement(RootsContext.Provider, {\n    value: [grommetRef.current]\n  }, /*#__PURE__*/React.createElement(ContainerTargetContext.Provider, {\n    value: containerTarget\n  }, /*#__PURE__*/React.createElement(OptionsContext.Provider, {\n    value: options\n  }, /*#__PURE__*/React.createElement(MessageContext.Provider, {\n    value: messages\n  }, /*#__PURE__*/React.createElement(StyledGrommet, _extends({\n    full: full\n  }, rest, {\n    ref: grommetRef\n  }), children), full && /*#__PURE__*/React.createElement(FullGlobalStyle, null)))))));\n});\nGrommet.displayName = 'Grommet';\nGrommet.propTypes = GrommetPropTypes;\nexport { Grommet };","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/node_modules/grommet/es6/components/Grommet/Grommet.js"],"names":["_excluded","_templateObject","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_taggedTemplateLiteralLoose","strings","raw","slice","React","forwardRef","useEffect","useMemo","useState","createGlobalStyle","ContainerTargetContext","ResponsiveContext","ThemeContext","deepMerge","backgroundIsDark","getBreakpoint","getDeviceBreakpoint","normalizeColor","useForwardedRef","base","baseTheme","StyledGrommet","RootsContext","OptionsContext","format","_format","MessageContext","defaultMessages","GrommetPropTypes","FullGlobalStyle","deviceResponsive","userAgent","theme","test","undefined","defaultOptions","Grommet","props","ref","children","full","_props$containerTarge","containerTarget","document","body","themeProp","_props$options","options","messagesProp","messages","rest","background","dir","themeMode","_useState","stateResponsive","setResponsive","nextTheme","menu","drop","align","themeBackground","global","colors","dark","defaultMode","color","baseBackground","nextMessages","opts","message","onResize","clientWidth","window","addEventListener","removeEventListener","responsive","deviceBreakpoints","tablet","grommetRef","createElement","Provider","value","current","displayName","propTypes"],"mappings":"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","sourcesContent":["var _excluded = [\"children\", \"full\", \"containerTarget\", \"theme\", \"options\", \"messages\"];\n\nvar _templateObject;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }\n\nimport React, { forwardRef, useEffect, useMemo, useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { ContainerTargetContext, ResponsiveContext, ThemeContext } from '../../contexts';\nimport { deepMerge, backgroundIsDark, getBreakpoint, getDeviceBreakpoint, normalizeColor, useForwardedRef } from '../../utils';\nimport { base as baseTheme } from '../../themes';\nimport { StyledGrommet } from './StyledGrommet';\nimport { RootsContext } from '../../contexts/RootsContext';\nimport { OptionsContext } from '../../contexts/OptionsContext';\nimport { format as _format, MessageContext } from '../../contexts/MessageContext';\nimport defaultMessages from '../../languages/default.json';\nimport { GrommetPropTypes } from './propTypes';\nvar FullGlobalStyle = createGlobalStyle(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  body { margin: 0; }\\n\"])));\n\nvar deviceResponsive = function deviceResponsive(userAgent, theme) {\n  // log('--deviceResponsive', userAgent, theme);\n\n  /*\n   * Regexes provided for mobile and tablet detection are meant to replace\n   * a full-featured specific library due to contributing a considerable size\n   * into the bundle.\n   *\n   * User agents found https://deviceatlas.com/blog/list-of-user-agent-strings\n   */\n  if (userAgent) {\n    if (/(tablet|ipad|playbook|silk)|(android(?!.*mobile))/i.test(userAgent)) {\n      return getDeviceBreakpoint('tablet', theme);\n    }\n\n    if (/Mobile|iPhone|Android/.test(userAgent)) {\n      return getDeviceBreakpoint('phone', theme);\n    }\n\n    return getDeviceBreakpoint('computer', theme);\n  }\n\n  return undefined;\n};\n\nvar defaultOptions = {};\nvar Grommet = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n      full = props.full,\n      _props$containerTarge = props.containerTarget,\n      containerTarget = _props$containerTarge === void 0 ? typeof document === 'object' ? document.body : undefined : _props$containerTarge,\n      themeProp = props.theme,\n      _props$options = props.options,\n      options = _props$options === void 0 ? defaultOptions : _props$options,\n      messagesProp = props.messages,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var background = props.background,\n      dir = props.dir,\n      themeMode = props.themeMode,\n      userAgent = props.userAgent;\n\n  var _useState = useState(),\n      stateResponsive = _useState[0],\n      setResponsive = _useState[1];\n\n  var theme = useMemo(function () {\n    var nextTheme = deepMerge(baseTheme, themeProp || {}); // if user provides specific menu alignment, we don't want\n    // the defaults to be included at all (can cause issues with controlMirror)\n    // override merged value with themeProp value\n\n    if (themeProp && themeProp.menu && themeProp.menu.drop && themeProp.menu.drop.align) {\n      delete nextTheme.menu.drop.align;\n      nextTheme.menu.drop.align = themeProp.menu.drop.align;\n    }\n\n    var themeBackground = nextTheme.global.colors.background;\n    nextTheme.dark = (themeMode || nextTheme.defaultMode) === 'dark';\n    var color = normalizeColor(background || themeBackground, nextTheme);\n    nextTheme.dark = backgroundIsDark(color, nextTheme);\n    nextTheme.baseBackground = background || themeBackground; // This allows DataTable to intelligently set the background of a pinned\n    // header or footer.\n\n    nextTheme.background = nextTheme.baseBackground;\n\n    if (dir) {\n      nextTheme.dir = dir;\n    }\n\n    return nextTheme;\n  }, [background, dir, themeMode, themeProp]);\n  var messages = useMemo(function () {\n    // combine the passed in messages, if any, with the default\n    // messages and format function.\n    var nextMessages = deepMerge(defaultMessages, (messagesProp == null ? void 0 : messagesProp.messages) || {});\n    return {\n      messages: nextMessages,\n      format: function format(opts) {\n        var message = (messagesProp == null ? void 0 : messagesProp.format) && messagesProp.format(opts);\n        return typeof message !== 'undefined' ? message : _format(opts, nextMessages);\n      }\n    };\n  }, [messagesProp]);\n  useEffect(function () {\n    var onResize = function onResize() {\n      setResponsive(getBreakpoint(document.body.clientWidth, theme));\n    };\n\n    window.addEventListener('resize', onResize);\n    onResize();\n    return function () {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [theme]);\n  var responsive = stateResponsive || deviceResponsive(userAgent, theme) || theme.global.deviceBreakpoints.tablet;\n  var grommetRef = useForwardedRef(ref);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, /*#__PURE__*/React.createElement(ResponsiveContext.Provider, {\n    value: responsive\n  }, /*#__PURE__*/React.createElement(RootsContext.Provider, {\n    value: [grommetRef.current]\n  }, /*#__PURE__*/React.createElement(ContainerTargetContext.Provider, {\n    value: containerTarget\n  }, /*#__PURE__*/React.createElement(OptionsContext.Provider, {\n    value: options\n  }, /*#__PURE__*/React.createElement(MessageContext.Provider, {\n    value: messages\n  }, /*#__PURE__*/React.createElement(StyledGrommet, _extends({\n    full: full\n  }, rest, {\n    ref: grommetRef\n  }), children), full && /*#__PURE__*/React.createElement(FullGlobalStyle, null)))))));\n});\nGrommet.displayName = 'Grommet';\nGrommet.propTypes = GrommetPropTypes;\nexport { Grommet };"]},"metadata":{},"sourceType":"module"}