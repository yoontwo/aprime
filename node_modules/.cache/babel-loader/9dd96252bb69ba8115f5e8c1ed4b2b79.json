{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBC31\\uC9C0\\uC724\\\\Desktop\\\\React\\\\mbti\\\\src\\\\components\\\\Question.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Button from \"../react-bootstrap/Button\";\nimport \"../bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = ({\n  data,\n  onAnswerUpdate,\n  numberOfQuestions,\n  activeQuestion,\n  onSetActiveQuestion,\n  onSetStep\n}) => {\n  const nextClickHandler = i => {\n    onAnswerUpdate(prevState => [...prevState, {\n      i\n    }]);\n\n    if (activeQuestion < numberOfQuestions - 1) {\n      onSetActiveQuestion(activeQuestion + 1);\n    } else {\n      onSetStep(3);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", data.question, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: onAnswerUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), data.choices.map((choice, i) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => nextClickHandler(i),\n        children: choice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/src/components/Question.js"],"names":["React","useState","useEffect","useRef","Button","Question","data","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetStep","nextClickHandler","i","prevState","question","choices","map","choice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAO,yCAAP;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,IADgB;AAEhBC,EAAAA,cAFgB;AAGhBC,EAAAA,iBAHgB;AAIhBC,EAAAA,cAJgB;AAKhBC,EAAAA,mBALgB;AAMhBC,EAAAA;AANgB,CAAD,KAOX;AACJ,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9BN,IAAAA,cAAc,CAAEO,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAe;AAAED,MAAAA;AAAF,KAAf,CAAhB,CAAd;;AACA,QAAIJ,cAAc,GAAGD,iBAAiB,GAAG,CAAzC,EAA4C;AAC1CE,MAAAA,mBAAmB,CAACD,cAAc,GAAG,CAAlB,CAAnB;AACD,KAFD,MAEO;AACLE,MAAAA,SAAS,CAAC,CAAD,CAAT;AACD;AACF,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA,sBAAML,IAAI,CAACS,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIR;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGD,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAiB,CAACC,MAAD,EAASL,CAAT,kBAChB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMD,gBAAgB,CAACC,CAAD,CAAvC;AAAA,kBAA6CK;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA5BD;;KAAMb,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Button from \"../react-bootstrap/Button\";\r\nimport \"../bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Question = ({\r\n  data,\r\n  onAnswerUpdate,\r\n  numberOfQuestions,\r\n  activeQuestion,\r\n  onSetActiveQuestion,\r\n  onSetStep,\r\n}) => {\r\n  const nextClickHandler = (i) => {\r\n    onAnswerUpdate((prevState) => [...prevState, { i }]);\r\n    if (activeQuestion < numberOfQuestions - 1) {\r\n      onSetActiveQuestion(activeQuestion + 1);\r\n    } else {\r\n      onSetStep(3);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2> {data.question} </h2>\r\n      <p>{onAnswerUpdate}</p>\r\n      {data.choices.map((choice, i) => (\r\n        <ul>\r\n          <Button onClick={() => nextClickHandler(i)}>{choice}</Button>\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}