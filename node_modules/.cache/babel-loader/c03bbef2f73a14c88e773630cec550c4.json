{"ast":null,"code":"import React, { forwardRef, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { defaultProps } from '../../default-props';\nimport { useForwardedRef } from '../../utils';\nimport { Box } from '../Box';\nimport { CollapsiblePropTypes } from './propTypes';\nvar AnimatedBox = styled(Box).withConfig({\n  displayName: \"Collapsible__AnimatedBox\",\n  componentId: \"sc-15kniua-0\"\n})([\"\", \"\"], function (props) {\n  return props.shouldOpen ? \"visibility: hidden;\\n      position: absolute;\\n      pointer-events: none;\" : // eslint-disable-next-line max-len\n  \"transition: \" + (\"max-\" + props.dimension + \" \" + props.speedProp + \"ms, opacity \" + props.speedProp + \"ms\") + \";\\n      opacity: \" + (props.open ? 1 : 0) + \";\\n      overflow: \" + (props.animate || !props.open ? 'hidden' : 'visible') + \";\";\n});\nvar Collapsible = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      direction = _ref.direction,\n      openArg = _ref.open;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useState = useState(openArg),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      animate = _useState2[0],\n      setAnimate = _useState2[1];\n\n  var _useState3 = useState(theme.collapsible.minSpeed),\n      speed = _useState3[0],\n      setSpeed = _useState3[1];\n\n  var dimension = useMemo(function () {\n    return direction === 'horizontal' ? 'width' : 'height';\n  }, [direction]);\n  var containerRef = useForwardedRef(ref);\n  var sizeRef = useRef();\n  var shouldOpen = !open && openArg;\n  var shouldClose = open && !openArg; // when the caller changes openArg, trigger animation\n\n  useEffect(function () {\n    if (openArg !== open) {\n      setAnimate(true);\n      setOpen(openArg);\n    }\n  }, [open, openArg]); // prepare to open or close\n\n  useLayoutEffect(function () {\n    var container = containerRef.current; // skip this if animation is in progress\n\n    if (!animate && shouldOpen) {\n      var parentPrevPosition = container.parentNode.style.position;\n      container.parentNode.style.position = 'relative';\n\n      var _container$getBoundin = container.getBoundingClientRect(),\n          size = _container$getBoundin[dimension];\n\n      container.parentNode.style.position = parentPrevPosition;\n      sizeRef.current = size;\n    }\n\n    if (shouldOpen) {\n      container.style[\"max-\" + dimension] = 0;\n    } else if (shouldClose) {\n      var _container$getBoundin2 = container.getBoundingClientRect(),\n          _size = _container$getBoundin2[dimension];\n\n      container.style[\"max-\" + dimension] = _size + \"px\";\n    }\n  }, [shouldOpen, shouldClose, containerRef, dimension, animate]);\n  useEffect(function () {\n    if (shouldOpen || shouldClose) {\n      var container = containerRef.current;\n      var _theme$collapsible = theme.collapsible,\n          minSpeed = _theme$collapsible.minSpeed,\n          baseline = _theme$collapsible.baseline;\n      var nextSpeed = Math.max(sizeRef.current / baseline * minSpeed, minSpeed);\n      setSpeed(nextSpeed);\n      requestAnimationFrame(function () {\n        requestAnimationFrame(function () {\n          // Change the max to where we want to end up, the transition will\n          // animate to get there. We do this in an animation frame to\n          // give our starter setting a chance to fully render.\n          container.style[\"max-\" + dimension] = shouldOpen ? sizeRef.current + \"px\" : 0;\n        });\n      });\n    }\n  }, [shouldOpen, shouldClose, containerRef, dimension, theme]);\n  useEffect(function () {\n    if (animate) {\n      var container = containerRef.current;\n      var timer = setTimeout(function () {\n        setAnimate(false);\n        container.removeAttribute('style');\n      }, speed);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n\n    return undefined; // we need open here to cancel the timer and restart it\n  }, [animate, containerRef, speed, open]);\n  return /*#__PURE__*/React.createElement(AnimatedBox, {\n    \"aria-hidden\": !open,\n    ref: containerRef,\n    open: open,\n    animate: animate,\n    dimension: dimension,\n    speedProp: speed // an intermediate state that will render invisible element\n    // we need to do this because we can't use scrollHeight/scrollWidth\n    // to get size while overflow is hidden.\n    // skipped if animation is in progress\n    ,\n    shouldOpen: !animate && shouldOpen\n  }, shouldOpen || open || animate ? children : null);\n});\nCollapsible.displayName = 'Collapsible';\nCollapsible.propTypes = CollapsiblePropTypes;\nexport { Collapsible };","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/node_modules/grommet/es6/components/Collapsible/Collapsible.js"],"names":["React","forwardRef","useContext","useEffect","useMemo","useRef","useState","styled","ThemeContext","useLayoutEffect","defaultProps","useForwardedRef","Box","CollapsiblePropTypes","AnimatedBox","withConfig","displayName","componentId","props","shouldOpen","dimension","speedProp","open","animate","Collapsible","_ref","ref","children","direction","openArg","theme","_useState","setOpen","_useState2","setAnimate","_useState3","collapsible","minSpeed","speed","setSpeed","containerRef","sizeRef","shouldClose","container","current","parentPrevPosition","parentNode","style","position","_container$getBoundin","getBoundingClientRect","size","_container$getBoundin2","_size","_theme$collapsible","baseline","nextSpeed","Math","max","requestAnimationFrame","timer","setTimeout","removeAttribute","clearTimeout","undefined","createElement","propTypes"],"mappings":"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","sourcesContent":["import React, { forwardRef, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { defaultProps } from '../../default-props';\nimport { useForwardedRef } from '../../utils';\nimport { Box } from '../Box';\nimport { CollapsiblePropTypes } from './propTypes';\nvar AnimatedBox = styled(Box).withConfig({\n  displayName: \"Collapsible__AnimatedBox\",\n  componentId: \"sc-15kniua-0\"\n})([\"\", \"\"], function (props) {\n  return props.shouldOpen ? \"visibility: hidden;\\n      position: absolute;\\n      pointer-events: none;\" : // eslint-disable-next-line max-len\n  \"transition: \" + (\"max-\" + props.dimension + \" \" + props.speedProp + \"ms, opacity \" + props.speedProp + \"ms\") + \";\\n      opacity: \" + (props.open ? 1 : 0) + \";\\n      overflow: \" + (props.animate || !props.open ? 'hidden' : 'visible') + \";\";\n});\nvar Collapsible = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      direction = _ref.direction,\n      openArg = _ref.open;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useState = useState(openArg),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      animate = _useState2[0],\n      setAnimate = _useState2[1];\n\n  var _useState3 = useState(theme.collapsible.minSpeed),\n      speed = _useState3[0],\n      setSpeed = _useState3[1];\n\n  var dimension = useMemo(function () {\n    return direction === 'horizontal' ? 'width' : 'height';\n  }, [direction]);\n  var containerRef = useForwardedRef(ref);\n  var sizeRef = useRef();\n  var shouldOpen = !open && openArg;\n  var shouldClose = open && !openArg; // when the caller changes openArg, trigger animation\n\n  useEffect(function () {\n    if (openArg !== open) {\n      setAnimate(true);\n      setOpen(openArg);\n    }\n  }, [open, openArg]); // prepare to open or close\n\n  useLayoutEffect(function () {\n    var container = containerRef.current; // skip this if animation is in progress\n\n    if (!animate && shouldOpen) {\n      var parentPrevPosition = container.parentNode.style.position;\n      container.parentNode.style.position = 'relative';\n\n      var _container$getBoundin = container.getBoundingClientRect(),\n          size = _container$getBoundin[dimension];\n\n      container.parentNode.style.position = parentPrevPosition;\n      sizeRef.current = size;\n    }\n\n    if (shouldOpen) {\n      container.style[\"max-\" + dimension] = 0;\n    } else if (shouldClose) {\n      var _container$getBoundin2 = container.getBoundingClientRect(),\n          _size = _container$getBoundin2[dimension];\n\n      container.style[\"max-\" + dimension] = _size + \"px\";\n    }\n  }, [shouldOpen, shouldClose, containerRef, dimension, animate]);\n  useEffect(function () {\n    if (shouldOpen || shouldClose) {\n      var container = containerRef.current;\n      var _theme$collapsible = theme.collapsible,\n          minSpeed = _theme$collapsible.minSpeed,\n          baseline = _theme$collapsible.baseline;\n      var nextSpeed = Math.max(sizeRef.current / baseline * minSpeed, minSpeed);\n      setSpeed(nextSpeed);\n      requestAnimationFrame(function () {\n        requestAnimationFrame(function () {\n          // Change the max to where we want to end up, the transition will\n          // animate to get there. We do this in an animation frame to\n          // give our starter setting a chance to fully render.\n          container.style[\"max-\" + dimension] = shouldOpen ? sizeRef.current + \"px\" : 0;\n        });\n      });\n    }\n  }, [shouldOpen, shouldClose, containerRef, dimension, theme]);\n  useEffect(function () {\n    if (animate) {\n      var container = containerRef.current;\n      var timer = setTimeout(function () {\n        setAnimate(false);\n        container.removeAttribute('style');\n      }, speed);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n\n    return undefined; // we need open here to cancel the timer and restart it\n  }, [animate, containerRef, speed, open]);\n  return /*#__PURE__*/React.createElement(AnimatedBox, {\n    \"aria-hidden\": !open,\n    ref: containerRef,\n    open: open,\n    animate: animate,\n    dimension: dimension,\n    speedProp: speed // an intermediate state that will render invisible element\n    // we need to do this because we can't use scrollHeight/scrollWidth\n    // to get size while overflow is hidden.\n    // skipped if animation is in progress\n    ,\n    shouldOpen: !animate && shouldOpen\n  }, shouldOpen || open || animate ? children : null);\n});\nCollapsible.displayName = 'Collapsible';\nCollapsible.propTypes = CollapsiblePropTypes;\nexport { Collapsible };"]},"metadata":{},"sourceType":"module"}