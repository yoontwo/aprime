{"ast":null,"code":"var _excluded = [\"children\", \"value\", \"disabled\", \"focusIndicator\", \"gap\", \"labelKey\", \"valueKey\", \"onChange\", \"options\", \"name\"],\n    _excluded2 = [\"value\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { CheckBox } from '../CheckBox';\nimport { FormContext } from '../Form/FormContext';\nimport { StyledCheckBoxGroup } from './StyledCheckBoxGroup';\nimport { CheckBoxGroupPropTypes } from './propTypes';\nvar CheckBoxGroup = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      valueProp = _ref.value,\n      disabledProp = _ref.disabled,\n      _ref$focusIndicator = _ref.focusIndicator,\n      focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator,\n      gap = _ref.gap,\n      labelKey = _ref.labelKey,\n      valueKey = _ref.valueKey,\n      onChange = _ref.onChange,\n      optionsProp = _ref.options,\n      name = _ref.name,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var formContext = useContext(FormContext);\n  var theme = useContext(ThemeContext) || defaultProps.theme; // In case option is a string, normalize it to be an object\n\n  var options = optionsProp.map(function (option) {\n    return typeof option === 'string' ? {\n      disabled: disabledProp,\n      value: option,\n      label: option\n    } : option;\n  }); // 'value' is an array of checked valueKeys\n\n  var _formContext$useFormI = formContext.useFormInput(name, valueProp, []),\n      value = _formContext$useFormI[0],\n      setValue = _formContext$useFormI[1]; // Logic is necessary to maintain a proper data structure for Form logic\n\n\n  var onCheckBoxChange = function onCheckBoxChange(event, optionValue, option) {\n    // deep copy of value\n    var nextValue = JSON.parse(JSON.stringify(value)) || [];\n    var optionIndex = nextValue.indexOf(optionValue); // If the value option isn't in the array, add it.\n    // Otherwise, remove it.\n\n    if (optionIndex < 0) nextValue.push(optionValue);else nextValue.splice(optionIndex, 1);\n    setValue(nextValue); // Similar functionality to Select onChange()\n\n    if (onChange) {\n      event.persist(); // extract from React synthetic event pool\n\n      var adjustedEvent = event;\n      adjustedEvent.value = nextValue;\n      adjustedEvent.option = option;\n      onChange(adjustedEvent);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledCheckBoxGroup, _extends({\n    ref: ref,\n    role: \"group\"\n  }, theme.checkBoxGroup.container, {\n    gap: gap || (theme.checkBoxGroup.container && theme.checkBoxGroup.container.gap ? theme.checkBoxGroup.container.gap : 'small') // consistent with RadioButtonGroup default\n\n  }, rest), options.map(function (option, index) {\n    var optionValue = option.value;\n    var label = labelKey ? option[labelKey] : option.label;\n    var valueOption = valueKey ? option[valueKey] : optionValue;\n    var checked = value.indexOf(valueOption) >= 0;\n    var disabled = disabledProp || option.disabled;\n    var key = label + \"-\" + valueOption;\n    if (option.checked) console.warn( // eslint-disable-next-line max-len\n    \"'checked' prop of an individual CheckBox shouldn't be used in a CheckBoxGroup component. Use the CheckBoxGroup 'value' prop instead.\"); // value shouldn't propagate the input field and the onChange option\n\n    var omit = option.value,\n        optionRest = _objectWithoutPropertiesLoose(option, _excluded2);\n\n    var optionProps = _extends({}, optionRest, {\n      label: label,\n      disabled: disabled\n    });\n\n    return /*#__PURE__*/React.createElement(CheckBox, _extends({\n      key: key\n    }, optionProps, {\n      disabled: disabled,\n      checked: checked // when contained in a FormField, focusIndicator = false,\n      // so that the FormField has focus style. However, we still\n      // need to visually indicate when a CheckBox is active.\n      // In CheckBox, if focus = true but focusIndicator = false,\n      // we will apply the hover treament.\n      ,\n      focusIndicator: focusIndicator,\n      label: label,\n      onChange: function onChange(event) {\n        return onCheckBoxChange(event, valueOption, optionProps);\n      }\n    }), children ? function (state) {\n      return children(options[index], state);\n    } : null);\n  }));\n});\nCheckBoxGroup.displayName = 'CheckBoxGroup';\nCheckBoxGroup.propTypes = CheckBoxGroupPropTypes;\nexport { CheckBoxGroup };","map":{"version":3,"sources":["C:/Users/백지윤/Desktop/React/mbti/node_modules/grommet/es6/components/CheckBoxGroup/CheckBoxGroup.js"],"names":["_excluded","_excluded2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useContext","ThemeContext","CheckBox","FormContext","StyledCheckBoxGroup","CheckBoxGroupPropTypes","CheckBoxGroup","_ref","ref","children","valueProp","value","disabledProp","disabled","_ref$focusIndicator","focusIndicator","gap","labelKey","valueKey","onChange","optionsProp","options","name","rest","formContext","theme","defaultProps","map","option","label","_formContext$useFormI","useFormInput","setValue","onCheckBoxChange","event","optionValue","nextValue","JSON","parse","stringify","optionIndex","push","splice","persist","adjustedEvent","createElement","role","checkBoxGroup","container","index","valueOption","checked","console","warn","omit","optionRest","optionProps","state","displayName","propTypes"],"mappings":"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","sourcesContent":["var _excluded = [\"children\", \"value\", \"disabled\", \"focusIndicator\", \"gap\", \"labelKey\", \"valueKey\", \"onChange\", \"options\", \"name\"],\n    _excluded2 = [\"value\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { CheckBox } from '../CheckBox';\nimport { FormContext } from '../Form/FormContext';\nimport { StyledCheckBoxGroup } from './StyledCheckBoxGroup';\nimport { CheckBoxGroupPropTypes } from './propTypes';\nvar CheckBoxGroup = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      valueProp = _ref.value,\n      disabledProp = _ref.disabled,\n      _ref$focusIndicator = _ref.focusIndicator,\n      focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator,\n      gap = _ref.gap,\n      labelKey = _ref.labelKey,\n      valueKey = _ref.valueKey,\n      onChange = _ref.onChange,\n      optionsProp = _ref.options,\n      name = _ref.name,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var formContext = useContext(FormContext);\n  var theme = useContext(ThemeContext) || defaultProps.theme; // In case option is a string, normalize it to be an object\n\n  var options = optionsProp.map(function (option) {\n    return typeof option === 'string' ? {\n      disabled: disabledProp,\n      value: option,\n      label: option\n    } : option;\n  }); // 'value' is an array of checked valueKeys\n\n  var _formContext$useFormI = formContext.useFormInput(name, valueProp, []),\n      value = _formContext$useFormI[0],\n      setValue = _formContext$useFormI[1]; // Logic is necessary to maintain a proper data structure for Form logic\n\n\n  var onCheckBoxChange = function onCheckBoxChange(event, optionValue, option) {\n    // deep copy of value\n    var nextValue = JSON.parse(JSON.stringify(value)) || [];\n    var optionIndex = nextValue.indexOf(optionValue); // If the value option isn't in the array, add it.\n    // Otherwise, remove it.\n\n    if (optionIndex < 0) nextValue.push(optionValue);else nextValue.splice(optionIndex, 1);\n    setValue(nextValue); // Similar functionality to Select onChange()\n\n    if (onChange) {\n      event.persist(); // extract from React synthetic event pool\n\n      var adjustedEvent = event;\n      adjustedEvent.value = nextValue;\n      adjustedEvent.option = option;\n      onChange(adjustedEvent);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledCheckBoxGroup, _extends({\n    ref: ref,\n    role: \"group\"\n  }, theme.checkBoxGroup.container, {\n    gap: gap || (theme.checkBoxGroup.container && theme.checkBoxGroup.container.gap ? theme.checkBoxGroup.container.gap : 'small') // consistent with RadioButtonGroup default\n\n  }, rest), options.map(function (option, index) {\n    var optionValue = option.value;\n    var label = labelKey ? option[labelKey] : option.label;\n    var valueOption = valueKey ? option[valueKey] : optionValue;\n    var checked = value.indexOf(valueOption) >= 0;\n    var disabled = disabledProp || option.disabled;\n    var key = label + \"-\" + valueOption;\n    if (option.checked) console.warn( // eslint-disable-next-line max-len\n    \"'checked' prop of an individual CheckBox shouldn't be used in a CheckBoxGroup component. Use the CheckBoxGroup 'value' prop instead.\"); // value shouldn't propagate the input field and the onChange option\n\n    var omit = option.value,\n        optionRest = _objectWithoutPropertiesLoose(option, _excluded2);\n\n    var optionProps = _extends({}, optionRest, {\n      label: label,\n      disabled: disabled\n    });\n\n    return /*#__PURE__*/React.createElement(CheckBox, _extends({\n      key: key\n    }, optionProps, {\n      disabled: disabled,\n      checked: checked // when contained in a FormField, focusIndicator = false,\n      // so that the FormField has focus style. However, we still\n      // need to visually indicate when a CheckBox is active.\n      // In CheckBox, if focus = true but focusIndicator = false,\n      // we will apply the hover treament.\n      ,\n      focusIndicator: focusIndicator,\n      label: label,\n      onChange: function onChange(event) {\n        return onCheckBoxChange(event, valueOption, optionProps);\n      }\n    }), children ? function (state) {\n      return children(options[index], state);\n    } : null);\n  }));\n});\nCheckBoxGroup.displayName = 'CheckBoxGroup';\nCheckBoxGroup.propTypes = CheckBoxGroupPropTypes;\nexport { CheckBoxGroup };"]},"metadata":{},"sourceType":"module"}